{"ast":null,"code":"var _jsxFileName = \"D:\\\\17\\u5C08\\u6848\\\\\\u5BA2\\u88FD\\u5316ui\\u5C08\\u6848\\\\test2\\\\vmo-frontend-2008-tw-momo\\\\packages\\\\web\\\\components\\\\leaderboard\\\\MissionPanel.tsx\";\nimport React, { useContext, useEffect, useRef, memo } from 'react';\nimport axios from 'axios';\nimport Loading from '@vmo/ui/Loading';\nimport { getEventoryDetails } from '@vmo/share/services/leaderboardEventory.service';\nimport { WrapPanel, WrapMission, WrapMetaScore } from './style';\nimport { MissionPanelContext } from '../../context/missionPanelContext';\n\nconst RenderMission = ({\n  mission,\n  score,\n  isChecked\n}) => {\n  return React.createElement(WrapMission, {\n    isChecked: isChecked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mission-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, mission.title), React.createElement(\"div\", {\n    className: \"mission-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, mission.prize), React.createElement(\"div\", {\n    className: \"mission-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, mission.description), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"(\", score, \"/\", mission.threshold, \")\")), mission.threshold && React.createElement(\"div\", {\n    className: \"mission-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n};\n\nexport default memo(({\n  condition,\n  userID,\n  meta = {}\n}) => {\n  const source = useRef();\n  const panelState = useContext(MissionPanelContext);\n  const {\n    missionDetails,\n    setMissionDetails\n  } = panelState;\n  const {\n    needRequest,\n    missions\n  } = condition;\n  useEffect(() => {\n    if (needRequest && missionDetails.length === 0) {\n      const subKeys = userID;\n      source.current = axios.CancelToken.source();\n      const cancelToken = source.current.token;\n      getEventoryDetails(condition.containerID, subKeys, cancelToken).then(result => {\n        const detailList = [];\n\n        if (result && result.data) {\n          result.data.forEach(item => {\n            if (item.meta && item.meta.eventoryKey) detailList.push({\n              eventoryKey: item.meta.eventoryKey,\n              score: item.score\n            });\n          });\n        } else {\n          detailList.push({\n            eventoryKey: '2008_tw_momo_l_bag',\n            score: 0\n          });\n        }\n\n        setMissionDetails(detailList);\n      });\n    }\n\n    return () => {\n      if (source.current) source.current.cancel();\n    };\n  }, [condition.containerID, missionDetails.length, needRequest, setMissionDetails, userID]);\n\n  const RenderMetaScore = ({\n    mission\n  }) => {\n    return React.createElement(WrapMetaScore, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mission-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, mission.title), React.createElement(\"div\", {\n      className: \"mission-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"+ \", meta[mission.metaKey], \" \\u5206\"));\n  };\n\n  if (needRequest && missionDetails.length === 0) {\n    return React.createElement(WrapPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Loading, {\n      color: \"#ffffff\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(WrapPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, missions.map(item => {\n    if (needRequest) {\n      let isChecked = false;\n      let score = 0;\n\n      if (missionDetails.length > 0) {\n        const missionMatched = missionDetails.find(detail => detail.eventoryKey.includes(item.eventoryKey));\n\n        if (missionMatched) {\n          isChecked = missionMatched.score >= item.threshold;\n          score = missionMatched.score >= item.threshold ? item.threshold : missionMatched.score;\n        }\n      }\n\n      return React.createElement(RenderMission, {\n        key: item.title,\n        mission: item,\n        score: score,\n        isChecked: isChecked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(RenderMetaScore, {\n      key: item.title,\n      mission: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    });\n  }));\n});","map":{"version":3,"sources":["D:\\17專案\\客製化ui專案\\test2\\vmo-frontend-2008-tw-momo\\packages\\web\\components\\leaderboard\\MissionPanel.tsx"],"names":["React","useContext","useEffect","useRef","memo","axios","Loading","getEventoryDetails","WrapPanel","WrapMission","WrapMetaScore","MissionPanelContext","RenderMission","mission","score","isChecked","title","prize","description","threshold","condition","userID","meta","source","panelState","missionDetails","setMissionDetails","needRequest","missions","length","subKeys","current","CancelToken","cancelToken","token","containerID","then","result","detailList","data","forEach","item","eventoryKey","push","cancel","RenderMetaScore","metaKey","map","missionMatched","find","detail","includes"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, memo } from 'react';\nimport axios, { CancelTokenSource } from 'axios';\n\nimport Loading from '@vmo/ui/Loading';\nimport { getEventoryDetails } from '@vmo/share/services/leaderboardEventory.service';\n\nimport { WrapPanel, WrapMission, WrapMetaScore } from './style';\nimport { MissionPanelContext } from '../../context/missionPanelContext';\n\nconst RenderMission = ({ mission, score, isChecked }) => {\n  return (\n    <WrapMission isChecked={isChecked}>\n      <div className=\"mission-title\">{mission.title}</div>\n      <div className=\"mission-title\">{mission.prize}</div>\n      <div className=\"mission-description\">\n        <div>{mission.description}</div>\n        <div>\n          ({score}/{mission.threshold})\n        </div>\n      </div>\n      {mission.threshold && <div className=\"mission-check\" />}\n    </WrapMission>\n  );\n};\n\nexport default memo(({ condition, userID, meta = {} }) => {\n  const source = useRef<CancelTokenSource>();\n  const panelState = useContext(MissionPanelContext);\n  const { missionDetails, setMissionDetails } = panelState;\n\n  const { needRequest, missions } = condition;\n\n  useEffect(() => {\n    if (needRequest && missionDetails.length === 0) {\n      const subKeys = userID;\n      source.current = axios.CancelToken.source();\n      const cancelToken = source.current.token;\n      getEventoryDetails(condition.containerID, subKeys, cancelToken).then(\n        result => {\n          const detailList = [];\n          if (result && result.data) {\n            result.data.forEach(item => {\n              if (item.meta && item.meta.eventoryKey)\n                detailList.push({\n                  eventoryKey: item.meta.eventoryKey,\n                  score: item.score,\n                });\n            });\n          } else {\n            detailList.push({\n              eventoryKey: '2008_tw_momo_l_bag',\n              score: 0,\n            });\n          }\n\n          setMissionDetails(detailList);\n        },\n      );\n    }\n    return () => {\n      if (source.current) source.current.cancel();\n    };\n  }, [\n    condition.containerID,\n    missionDetails.length,\n    needRequest,\n    setMissionDetails,\n    userID,\n  ]);\n\n  const RenderMetaScore = ({ mission }) => {\n    return (\n      <WrapMetaScore>\n        <div className=\"mission-title\">{mission.title}</div>\n        <div className=\"mission-description\">+ {meta[mission.metaKey]} 分</div>\n      </WrapMetaScore>\n    );\n  };\n\n  if (needRequest && missionDetails.length === 0) {\n    return (\n      <WrapPanel>\n        <Loading color=\"#ffffff\" />\n      </WrapPanel>\n    );\n  }\n\n  return (\n    <WrapPanel>\n      {missions.map(item => {\n        if (needRequest) {\n          let isChecked = false;\n          let score = 0;\n          if (missionDetails.length > 0) {\n            const missionMatched = missionDetails.find(detail =>\n              detail.eventoryKey.includes(item.eventoryKey),\n            );\n            if (missionMatched) {\n              isChecked = missionMatched.score >= item.threshold;\n              score =\n                missionMatched.score >= item.threshold\n                  ? item.threshold\n                  : missionMatched.score;\n            }\n          }\n          return (\n            <RenderMission\n              key={item.title}\n              mission={item}\n              score={score}\n              isChecked={isChecked}\n            />\n          );\n        }\n        return <RenderMetaScore key={item.title} mission={item} />;\n      })}\n    </WrapPanel>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}