{"ast":null,"code":"var _jsxFileName = \"D:\\\\17\\u5C08\\u6848\\\\\\u5BA2\\u88FD\\u5316ui\\u5C08\\u6848\\\\2011-tw-xmas chris\\\\vmo-frontend-2011-tw-xmas\\\\packages\\\\web\\\\components\\\\leaderboard\\\\MissionPanel.tsx\";\nimport React, { useContext, useEffect, useRef, memo } from 'react';\nimport axios from 'axios';\nimport Loading from '@vmo/ui/Loading';\nimport { getEventoryDetails } from '@vmo/share/services/leaderboardEventory.service';\nimport { WrapPanel, WrapMission, WrapMetaScore } from './style';\nimport { MissionPanelContext } from '../../context/missionPanelContext';\n\nconst RenderMission = ({\n  mission,\n  score,\n  isChecked\n}) => {\n  return /*#__PURE__*/React.createElement(WrapMission, {\n    isChecked: isChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mission-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, mission.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mission-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, mission.description, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mission-prize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, mission.prize), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mission-threshold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"\\u76EE\\u524D\\u7D2F\\u7A4D\\u6578\\u91CF(\", score, \"/\", mission.threshold, \")\"))), mission.threshold && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mission-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 29\n    }\n  }));\n};\n\nexport default memo(({\n  condition,\n  userID,\n  meta = {}\n}) => {\n  const source = useRef();\n  const panelState = useContext(MissionPanelContext);\n  const {\n    missionDetails,\n    setMissionDetails\n  } = panelState;\n  const {\n    needRequest,\n    missions\n  } = condition;\n  useEffect(() => {\n    if (needRequest && missionDetails.length === 0) {\n      const subKeys = userID;\n      source.current = axios.CancelToken.source();\n      const cancelToken = source.current.token;\n      getEventoryDetails(condition.containerID, subKeys, cancelToken).then(result => {\n        const detailList = [];\n\n        if (result && result.data) {\n          result.data.forEach(item => {\n            if (item.meta && item.meta.eventoryKey) detailList.push({\n              eventoryKey: item.meta.eventoryKey,\n              score: item.score\n            });\n          });\n        } else {\n          detailList.push({\n            eventoryKey: '2008_tw_momo_l_bag',\n            score: 0\n          });\n        }\n\n        setMissionDetails(detailList);\n      });\n    }\n\n    return () => {\n      if (source.current) source.current.cancel();\n    };\n  }, [condition.containerID, missionDetails.length, needRequest, setMissionDetails, userID]);\n\n  const RenderMetaScore = ({\n    mission\n  }) => {\n    return /*#__PURE__*/React.createElement(WrapMetaScore, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mission-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, mission.title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mission-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, \"+ \", meta[mission.metaKey], \" \\u5206\"));\n  };\n\n  if (needRequest && missionDetails.length === 0) {\n    return /*#__PURE__*/React.createElement(WrapPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Loading, {\n      color: \"#ffffff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(WrapPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, missions.map(item => {\n    if (needRequest) {\n      let isChecked = false;\n      let score = 0;\n\n      if (missionDetails.length > 0) {\n        const missionMatched = missionDetails.find(detail => detail.eventoryKey.includes(item.eventoryKey));\n\n        if (missionMatched) {\n          isChecked = missionMatched.score >= item.threshold;\n          score = missionMatched.score >= item.threshold ? item.threshold : missionMatched.score;\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(RenderMission, {\n        key: item.title,\n        mission: item,\n        score: score,\n        isChecked: isChecked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(RenderMetaScore, {\n      key: item.title,\n      mission: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 16\n      }\n    });\n  }));\n});","map":{"version":3,"sources":["D:/17專案/客製化ui專案/2011-tw-xmas chris/vmo-frontend-2011-tw-xmas/packages/web/components/leaderboard/MissionPanel.tsx"],"names":["RenderMission","isChecked","mission","memo","meta","source","useRef","panelState","useContext","setMissionDetails","missions","useEffect","needRequest","missionDetails","subKeys","axios","cancelToken","getEventoryDetails","condition","result","detailList","item","eventoryKey","score","RenderMetaScore","missionMatched","detail"],"mappings":";AAAA,OAAA,KAAA,IAAA,UAAA,EAAA,SAAA,EAAA,MAAA,EAAA,IAAA,QAAA,OAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,OAAA,OAAA,MAAA,iBAAA;AACA,SAAA,kBAAA,QAAA,iDAAA;AAEA,SAAA,SAAA,EAAA,WAAA,EAAA,aAAA,QAAA,SAAA;AACA,SAAA,mBAAA,QAAA,mCAAA;;AAEA,MAAMA,aAAa,GAAG,CAAC;AAAA,EAAA,OAAA;AAAA,EAAA,KAAA;AAAkBC,EAAAA;AAAlB,CAAD,KAAmC;AACvD,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA;AAAa,IAAA,SAAS,EAAtB,SAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAd,eAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAgCC,OAAO,CADzC,KACE,CADF,EAAA,aAEE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAd,qBAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAMA,OAAO,CAAb,WAAA,EAAA,aACA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAd,eAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAgCA,OAAO,CADvC,KACA,CADA,EAAA,aAEA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAd,mBAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAA,uCAAA,EAAA,KAAA,EAAA,GAAA,EACkBA,OAAO,CADzB,SAAA,EALJ,GAKI,CAFA,CADF,CAFF,EAUGA,OAAO,CAAPA,SAAAA,IAAAA,aAAqB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAd,eAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAVxB,CADF;AADF,CAAA;;AAiBA,eAAeC,IAAI,CAAC,CAAC;AAAA,EAAA,SAAA;AAAA,EAAA,MAAA;AAAqBC,EAAAA,IAAI,GAAG;AAA5B,CAAD,KAAsC;AACxD,QAAMC,MAAM,GAAGC,MAAf,EAAA;AACA,QAAMC,UAAU,GAAGC,UAAU,CAA7B,mBAA6B,CAA7B;AACA,QAAM;AAAA,IAAA,cAAA;AAAkBC,IAAAA;AAAlB,MAAN,UAAA;AAEA,QAAM;AAAA,IAAA,WAAA;AAAeC,IAAAA;AAAf,MAAN,SAAA;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIC,WAAW,IAAIC,cAAc,CAAdA,MAAAA,KAAnB,CAAA,EAAgD;AAC9C,YAAMC,OAAO,GAAb,MAAA;AACAT,MAAAA,MAAM,CAANA,OAAAA,GAAiBU,KAAK,CAALA,WAAAA,CAAjBV,MAAiBU,EAAjBV;AACA,YAAMW,WAAW,GAAGX,MAAM,CAANA,OAAAA,CAApB,KAAA;AACAY,MAAAA,kBAAkB,CAACC,SAAS,CAAV,WAAA,EAAA,OAAA,EAAlBD,WAAkB,CAAlBA,CAAAA,IAAAA,CACEE,MAAM,IAAI;AACR,cAAMC,UAAU,GAAhB,EAAA;;AACA,YAAID,MAAM,IAAIA,MAAM,CAApB,IAAA,EAA2B;AACzBA,UAAAA,MAAM,CAANA,IAAAA,CAAAA,OAAAA,CAAoBE,IAAI,IAAI;AAC1B,gBAAIA,IAAI,CAAJA,IAAAA,IAAaA,IAAI,CAAJA,IAAAA,CAAjB,WAAA,EACE,UAAU,CAAV,IAAA,CAAgB;AACdC,cAAAA,WAAW,EAAED,IAAI,CAAJA,IAAAA,CADC,WAAA;AAEdE,cAAAA,KAAK,EAAEF,IAAI,CAACE;AAFE,aAAhB;AAFJJ,WAAAA;AADF,SAAA,MAQO;AACLC,UAAAA,UAAU,CAAVA,IAAAA,CAAgB;AACdE,YAAAA,WAAW,EADG,oBAAA;AAEdC,YAAAA,KAAK,EAAE;AAFO,WAAhBH;AAID;;AAEDX,QAAAA,iBAAiB,CAAjBA,UAAiB,CAAjBA;AAlBJQ,OAAAA;AAqBD;;AACD,WAAO,MAAM;AACX,UAAIZ,MAAM,CAAV,OAAA,EAAoBA,MAAM,CAANA,OAAAA,CAAAA,MAAAA;AADtB,KAAA;AA3BO,GAAA,EA8BN,CACDa,SAAS,CADR,WAAA,EAEDL,cAAc,CAFb,MAAA,EAAA,WAAA,EAAA,iBAAA,EA9BHF,MA8BG,CA9BM,CAATA;;AAsCA,QAAMa,eAAe,GAAG,CAAC;AAAEtB,IAAAA;AAAF,GAAD,KAAiB;AACvC,WAAA,aACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;AAAA,MAAA,MAAA,EAAA,IAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAd,eAAA;AAAA,MAAA,MAAA,EAAA,IAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,EAAgCA,OAAO,CADzC,KACE,CADF,EAAA,aAEE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAd,qBAAA;AAAA,MAAA,MAAA,EAAA,IAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,EAAA,IAAA,EAAwCE,IAAI,CAACF,OAAO,CAApD,OAA4C,CAA5C,EAHJ,SAGI,CAFF,CADF;AADF,GAAA;;AASA,MAAIU,WAAW,IAAIC,cAAc,CAAdA,MAAAA,KAAnB,CAAA,EAAgD;AAC9C,WAAA,aACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AAAA,MAAA,MAAA,EAAA,IAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAS,MAAA,KAAK,EAAd,SAAA;AAAA,MAAA,MAAA,EAAA,IAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,CADF,CADF;AAKD;;AAED,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EACG,QAAQ,CAAR,GAAA,CAAaQ,IAAI,IAAI;AACpB,QAAA,WAAA,EAAiB;AACf,UAAIpB,SAAS,GAAb,KAAA;AACA,UAAIsB,KAAK,GAAT,CAAA;;AACA,UAAIV,cAAc,CAAdA,MAAAA,GAAJ,CAAA,EAA+B;AAC7B,cAAMY,cAAc,GAAGZ,cAAc,CAAdA,IAAAA,CAAoBa,MAAM,IAC/CA,MAAM,CAANA,WAAAA,CAAAA,QAAAA,CAA4BL,IAAI,CADlC,WACEK,CADqBb,CAAvB;;AAGA,YAAA,cAAA,EAAoB;AAClBZ,UAAAA,SAAS,GAAGwB,cAAc,CAAdA,KAAAA,IAAwBJ,IAAI,CAAxCpB,SAAAA;AACAsB,UAAAA,KAAK,GACHE,cAAc,CAAdA,KAAAA,IAAwBJ,IAAI,CAA5BI,SAAAA,GACIJ,IAAI,CADRI,SAAAA,GAEIA,cAAc,CAHpBF,KAAAA;AAID;AACF;;AACD,aAAA,aACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;AACE,QAAA,GAAG,EAAEF,IAAI,CADX,KAAA;AAEE,QAAA,OAAO,EAFT,IAAA;AAGE,QAAA,KAAK,EAHP,KAAA;AAIE,QAAA,SAAS,EAJX,SAAA;AAAA,QAAA,MAAA,EAAA,IAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,GAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA,CADF;AAQD;;AACD,WAAA,aAAO,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA;AAAiB,MAAA,GAAG,EAAEA,IAAI,CAA1B,KAAA;AAAkC,MAAA,OAAO,EAAzC,IAAA;AAAA,MAAA,MAAA,EAAA,IAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,GAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,CAAP;AA3BN,GAEK,CADH,CADF;AA9DF,CAAmB,CAAnB","sourcesContent":["import React, { useContext, useEffect, useRef, memo } from 'react';\nimport axios, { CancelTokenSource } from 'axios';\n\nimport Loading from '@vmo/ui/Loading';\nimport { getEventoryDetails } from '@vmo/share/services/leaderboardEventory.service';\n\nimport { WrapPanel, WrapMission, WrapMetaScore } from './style';\nimport { MissionPanelContext } from '../../context/missionPanelContext';\n\nconst RenderMission = ({ mission, score, isChecked }) => {\n  return (\n    <WrapMission isChecked={isChecked}>\n      <div className=\"mission-title\">{mission.title}</div>\n      <div className=\"mission-description\">\n        <div>{mission.description}\n        <div className=\"mission-prize\">{mission.prize}</div>\n        <div className=\"mission-threshold\">\n          目前累積數量({score}/{mission.threshold})\n        </div>\n        </div>\n      </div>\n      {mission.threshold && <div className=\"mission-check\" />}\n    </WrapMission>\n  );\n};\n\nexport default memo(({ condition, userID, meta = {} }) => {\n  const source = useRef<CancelTokenSource>();\n  const panelState = useContext(MissionPanelContext);\n  const { missionDetails, setMissionDetails } = panelState;\n\n  const { needRequest, missions } = condition;\n\n  useEffect(() => {\n    if (needRequest && missionDetails.length === 0) {\n      const subKeys = userID;\n      source.current = axios.CancelToken.source();\n      const cancelToken = source.current.token;\n      getEventoryDetails(condition.containerID, subKeys, cancelToken).then(\n        result => {\n          const detailList = [];\n          if (result && result.data) {\n            result.data.forEach(item => {\n              if (item.meta && item.meta.eventoryKey)\n                detailList.push({\n                  eventoryKey: item.meta.eventoryKey,\n                  score: item.score,\n                });\n            });\n          } else {\n            detailList.push({\n              eventoryKey: '2008_tw_momo_l_bag',\n              score: 0,\n            });\n          }\n\n          setMissionDetails(detailList);\n        },\n      );\n    }\n    return () => {\n      if (source.current) source.current.cancel();\n    };\n  }, [\n    condition.containerID,\n    missionDetails.length,\n    needRequest,\n    setMissionDetails,\n    userID,\n  ]);\n\n  const RenderMetaScore = ({ mission }) => {\n    return (\n      <WrapMetaScore>\n        <div className=\"mission-title\">{mission.title}</div>\n        <div className=\"mission-description\">+ {meta[mission.metaKey]} 分</div>\n      </WrapMetaScore>\n    );\n  };\n\n  if (needRequest && missionDetails.length === 0) {\n    return (\n      <WrapPanel>\n        <Loading color=\"#ffffff\" />\n      </WrapPanel>\n    );\n  }\n\n  return (\n    <WrapPanel>\n      {missions.map(item => {\n        if (needRequest) {\n          let isChecked = false;\n          let score = 0;\n          if (missionDetails.length > 0) {\n            const missionMatched = missionDetails.find(detail =>\n              detail.eventoryKey.includes(item.eventoryKey),\n            );\n            if (missionMatched) {\n              isChecked = missionMatched.score >= item.threshold;\n              score =\n                missionMatched.score >= item.threshold\n                  ? item.threshold\n                  : missionMatched.score;\n            }\n          }\n          return (\n            <RenderMission\n              key={item.title}\n              mission={item}\n              score={score}\n              isChecked={isChecked}\n            />\n          );\n        }\n        return <RenderMetaScore key={item.title} mission={item} />;\n      })}\n    </WrapPanel>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}