{"ast":null,"code":"import { getUUID } from '@vmo/share/utils';\nimport { getInstanceVote } from '@vmo/share/services/axios';\nconst defaultUrl = `/v1/votingEvent/`;\nexport const getLeaderboardVote = async (voteId, cancelToken) => {\n  const instance = getInstanceVote();\n  instance.interceptors.response.use(undefined, err => {\n    const error = err.response;\n\n    if (error.status === 401) {\n      return {};\n    }\n  });\n  const currentUrl = `${defaultUrl}${getUUID(voteId)}`;\n  const res = await instance.get(currentUrl, {\n    cancelToken\n  });\n  return res.data || [];\n};\nexport const doLeaderboardVote = async (voteId, topic, nomineeUserID, cancelToken) => {\n  const instance = getInstanceVote();\n  const currentUrl = `${defaultUrl}${getUUID(voteId)}/vote/${getUUID(topic)}/nominee/${nomineeUserID}`;\n  const res = await instance.post(currentUrl, {\n    cancelToken\n  });\n  return res.data || [];\n};","map":{"version":3,"sources":["D:/17專案/客製化ui專案/2011-tw-xmas/vmo-frontend-2008-tw-momo/packages/share/services/leaderboardVote.service.ts"],"names":["getUUID","getInstanceVote","defaultUrl","getLeaderboardVote","voteId","cancelToken","instance","interceptors","response","use","undefined","err","error","status","currentUrl","res","get","data","doLeaderboardVote","topic","nomineeUserID","post"],"mappings":"AAEA,SAASA,OAAT,QAAwB,kBAAxB;AACA,SAASC,eAAT,QAAgC,2BAAhC;AAGA,MAAMC,UAAU,GAAI,kBAApB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,OAChCC,MADgC,EAKhCC,WALgC,KAMD;AAC/B,QAAMC,QAAQ,GAAGL,eAAe,EAAhC;AACAK,EAAAA,QAAQ,CAACC,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CAAmCC,SAAnC,EAA8CC,GAAG,IAAI;AACnD,UAAMC,KAAK,GAAGD,GAAG,CAACH,QAAlB;;AACA,QAAII,KAAK,CAACC,MAAN,KAAiB,GAArB,EAA0B;AACxB,aAAO,EAAP;AACD;AACF,GALD;AAMA,QAAMC,UAAU,GAAI,GAAEZ,UAAW,GAAEF,OAAO,CAACI,MAAD,CAAS,EAAnD;AACA,QAAMW,GAAG,GAAG,MAAMT,QAAQ,CAACU,GAAT,CAAaF,UAAb,EAAyB;AAAET,IAAAA;AAAF,GAAzB,CAAlB;AAEA,SAAOU,GAAG,CAACE,IAAJ,IAAY,EAAnB;AACD,CAlBM;AAoBP,OAAO,MAAMC,iBAAiB,GAAG,OAC/Bd,MAD+B,EAK/Be,KAL+B,EAS/BC,aAT+B,EAU/Bf,WAV+B,KAWA;AAC/B,QAAMC,QAAQ,GAAGL,eAAe,EAAhC;AACA,QAAMa,UAAU,GAAI,GAAEZ,UAAW,GAAEF,OAAO,CAACI,MAAD,CAAS,SAAQJ,OAAO,CAChEmB,KADgE,CAEhE,YAAWC,aAAc,EAF3B;AAIA,QAAML,GAAG,GAAG,MAAMT,QAAQ,CAACe,IAAT,CAAcP,UAAd,EAA0B;AAAET,IAAAA;AAAF,GAA1B,CAAlB;AAEA,SAAOU,GAAG,CAACE,IAAJ,IAAY,EAAnB;AACD,CApBM","sourcesContent":["import { CancelToken } from 'axios';\n\nimport { getUUID } from '@vmo/share/utils';\nimport { getInstanceVote } from '@vmo/share/services/axios';\nimport { LeaderboardItem } from '@vmo/share/interfaces/LeaderboardItem';\n\nconst defaultUrl = `/v1/votingEvent/`;\n\nexport const getLeaderboardVote = async (\n  voteId: {\n    sta: string;\n    prod: string;\n  },\n  cancelToken: CancelToken,\n): Promise<LeaderboardItem[]> => {\n  const instance = getInstanceVote();\n  instance.interceptors.response.use(undefined, err => {\n    const error = err.response;\n    if (error.status === 401) {\n      return {};\n    }\n  });\n  const currentUrl = `${defaultUrl}${getUUID(voteId)}`;\n  const res = await instance.get(currentUrl, { cancelToken });\n\n  return res.data || [];\n};\n\nexport const doLeaderboardVote = async (\n  voteId: {\n    sta: string;\n    prod: string;\n  },\n  topic: {\n    sta: string;\n    prod: string;\n  },\n  nomineeUserID: string,\n  cancelToken: CancelToken,\n): Promise<LeaderboardItem[]> => {\n  const instance = getInstanceVote();\n  const currentUrl = `${defaultUrl}${getUUID(voteId)}/vote/${getUUID(\n    topic,\n  )}/nominee/${nomineeUserID}`;\n\n  const res = await instance.post(currentUrl, { cancelToken });\n\n  return res.data || [];\n};\n"]},"metadata":{},"sourceType":"module"}