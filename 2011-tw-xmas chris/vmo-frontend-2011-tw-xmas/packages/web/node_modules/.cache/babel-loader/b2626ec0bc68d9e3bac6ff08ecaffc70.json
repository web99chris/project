{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"D:\\\\17\\u5C08\\u6848\\\\\\u5BA2\\u88FD\\u5316ui\\u5C08\\u6848\\\\2011-tw-xmas\\\\vmo-frontend-2008-tw-momo\\\\packages\\\\web\\\\pages\\\\_document.tsx\";\nimport React from 'react';\nimport { ServerStyleSheet } from 'styled-components';\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { getUserLangs } from '@vmo/share/utils';\n\nclass MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () => originalRenderPage({\n        enhanceApp: App => props => sheet.collectStyles(React.createElement(App, _extends({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        })))\n      });\n\n      const initialProps = await Document.getInitialProps(ctx);\n      return _objectSpread({}, initialProps, {\n        styles: React.createElement(React.Fragment, null, initialProps.styles, sheet.getStyleElement())\n      });\n    } finally {\n      sheet.seal();\n    }\n  }\n\n  render() {\n    return React.createElement(Html, {\n      lang: process.browser ? getUserLangs()[0] : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"body\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Main, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(NextScript, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default MyDocument;","map":{"version":3,"sources":["D:\\17專案\\客製化ui專案\\2011-tw-xmas\\vmo-frontend-2008-tw-momo\\packages\\web\\pages\\_document.tsx"],"names":["React","ServerStyleSheet","Document","Html","Head","Main","NextScript","getUserLangs","MyDocument","getInitialProps","ctx","sheet","originalRenderPage","renderPage","enhanceApp","App","props","collectStyles","initialProps","styles","getStyleElement","seal","render","process","browser"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AAEA,OAAOC,QAAP,IACEC,IADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,UAJF,QAMO,eANP;AAOA,SAASC,YAAT,QAA6B,kBAA7B;;AAEA,MAAMC,UAAN,SAAyBN,QAAzB,CAAkC;AAChC,eAAaO,eAAb,CAA6BC,GAA7B,EAAuD;AACrD,UAAMC,KAAK,GAAG,IAAIV,gBAAJ,EAAd;AACA,UAAMW,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEA,QAAI;AACFH,MAAAA,GAAG,CAACG,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjBE,QAAAA,UAAU,EAAEC,GAAG,IAAIC,KAAK,IAAIL,KAAK,CAACM,aAAN,CAAoB,oBAAC,GAAD,eAASD,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAApB;AADX,OAAD,CADpB;;AAKA,YAAME,YAAY,GAAG,MAAMhB,QAAQ,CAACO,eAAT,CAAyBC,GAAzB,CAA3B;AACA,+BACKQ,YADL;AAEEC,QAAAA,MAAM,EACJ,0CACGD,YAAY,CAACC,MADhB,EAEGR,KAAK,CAACS,eAAN,EAFH;AAHJ;AASD,KAhBD,SAgBU;AACRT,MAAAA,KAAK,CAACU,IAAN;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEC,OAAO,CAACC,OAAR,GAAkBjB,YAAY,GAAG,CAAH,CAA9B,GAAsC,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CADF;AASD;;AApC+B;;AAuClC,eAAeC,UAAf","sourcesContent":["import React from 'react';\nimport { ServerStyleSheet } from 'styled-components';\n\nimport Document, {\n  Html,\n  Head,\n  Main,\n  NextScript,\n  NextDocumentContext,\n} from 'next/document';\nimport { getUserLangs } from '@vmo/share/utils';\n\nclass MyDocument extends Document {\n  static async getInitialProps(ctx: NextDocumentContext) {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () =>\n        originalRenderPage({\n          enhanceApp: App => props => sheet.collectStyles(<App {...props} />),\n        });\n\n      const initialProps = await Document.getInitialProps(ctx);\n      return {\n        ...initialProps,\n        styles: (\n          <>\n            {initialProps.styles}\n            {sheet.getStyleElement()}\n          </>\n        ),\n      };\n    } finally {\n      sheet.seal();\n    }\n  }\n\n  render() {\n    return (\n      <Html lang={process.browser ? getUserLangs()[0] : ''}>\n        <Head />\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    );\n  }\n}\n\nexport default MyDocument;\n"]},"metadata":{},"sourceType":"module"}