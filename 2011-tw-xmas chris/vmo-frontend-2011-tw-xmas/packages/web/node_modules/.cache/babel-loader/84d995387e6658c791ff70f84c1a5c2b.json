{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"D:\\\\17\\u5C08\\u6848\\\\\\u5BA2\\u88FD\\u5316ui\\u5C08\\u6848\\\\2011-tw-xmas chris\\\\vmo-frontend-2011-tw-xmas\\\\packages\\\\web\\\\components\\\\leaderboard\\\\LeaderboardGeneral.tsx\";\nimport React, { useContext, memo, useMemo, useRef } from 'react';\nimport { useMinSectionTracking, createSectionViewAction } from '17media-browser-spy';\nimport { VirtualizedList, CopyButton } from '@vmo/ui';\nimport { TranslationContext } from '@vmo/web/context/translationContext';\nimport { useFilter } from '@vmo/ui/hooks';\nimport { trackingSource } from '@vmo/share/17appTrack';\nimport { WrapFilter, NoData, WrapLeaderboardItem, FrameBorder, ToggleButton } from './style';\nimport { MissionPanelContext } from '../../context/missionPanelContext';\nimport { BonusPanelContext } from '../../context/bonusPanelContext';\n\nconst LeaderboardGeneral = ({\n  leaderboardData,\n  render,\n  itemHeight,\n  panelSize = 0,\n  withMissions = false,\n  withBonus = false\n}) => {\n  const translation = useContext(TranslationContext);\n  const {\n    data,\n    handleOnChange\n  } = useFilter(leaderboardData);\n  const refFilter = useRef(null);\n  const refLeaderboard = useRef(null);\n  const panelState = useContext(MissionPanelContext);\n  const {\n    showPanelID,\n    setShowPanelID,\n    setMissionDetails\n  } = panelState;\n  const panelState2 = useContext(BonusPanelContext);\n  const {\n    showPanelID2,\n    setShowPanelID2,\n    setBonusDetails\n  } = panelState2;\n  useMinSectionTracking(refFilter, () => {\n    trackingSource.track(createSectionViewAction('searchBar'));\n  });\n  useMinSectionTracking(refLeaderboard, () => {\n    trackingSource.track(createSectionViewAction('leaderboardItem'));\n  });\n\n  const handleToggleButton = useId => {\n    const newIndex = showPanelID === useId ? '' : useId;\n    setShowPanelID(newIndex);\n    setMissionDetails([]);\n  };\n\n  const Row = ({\n    index\n  }) => /*#__PURE__*/React.createElement(WrapLeaderboardItem, {\n    key: data[index].userID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, render(data[index], showPanelID === data[index].userID), withMissions && /*#__PURE__*/React.createElement(ToggleButton, {\n    isOpen: showPanelID === data[index].userID,\n    onClick: () => handleToggleButton(data[index].userID),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }));\n\n  const Filter = useMemo(() => /*#__PURE__*/React.createElement(WrapFilter, {\n    ref: refFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"\\u8ACB\\u8F38\\u5165\\u4E3B\\u64ADID\" // placeholder={translation.get('SEARCH_PLACEHOLDER')}\n    ,\n    onChange: evt => handleOnChange(evt.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }))), [handleOnChange, translation]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FrameBorder, {\n    ref: refLeaderboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, Filter, /*#__PURE__*/React.createElement(CopyButton, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), data.length > 0 ? /*#__PURE__*/React.createElement(VirtualizedList, {\n    dataset: data,\n    itemHeight: itemHeight,\n    updateOnID: showPanelID,\n    panelSize: panelSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, Row) : /*#__PURE__*/React.createElement(NoData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, translation.get('EMPTY_LEADERBOARD'))));\n};\n\nexport default memo(LeaderboardGeneral, (prev, next) => _JSON$stringify(prev) === _JSON$stringify(next));","map":{"version":3,"sources":["D:/17專案/客製化ui專案/2011-tw-xmas chris/vmo-frontend-2011-tw-xmas/packages/web/components/leaderboard/LeaderboardGeneral.tsx"],"names":["React","useContext","memo","useMemo","useRef","useMinSectionTracking","createSectionViewAction","VirtualizedList","CopyButton","TranslationContext","useFilter","trackingSource","WrapFilter","NoData","WrapLeaderboardItem","FrameBorder","ToggleButton","MissionPanelContext","BonusPanelContext","LeaderboardGeneral","leaderboardData","render","itemHeight","panelSize","withMissions","withBonus","translation","data","handleOnChange","refFilter","refLeaderboard","panelState","showPanelID","setShowPanelID","setMissionDetails","panelState2","showPanelID2","setShowPanelID2","setBonusDetails","track","handleToggleButton","useId","newIndex","Row","index","userID","Filter","evt","target","value","length","get","prev","next"],"mappings":"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","sourcesContent":["import React, { useContext, memo, useMemo, ReactNode, useRef } from 'react';\nimport {\n  useMinSectionTracking,\n  createSectionViewAction,\n} from '17media-browser-spy';\n\nimport { VirtualizedList, CopyButton } from '@vmo/ui';\nimport { LeaderboardItem as LeaderboardItemInterface } from '@vmo/share/interfaces/LeaderboardItem';\nimport { TranslationContext } from '@vmo/web/context/translationContext';\nimport { useFilter } from '@vmo/ui/hooks';\nimport { trackingSource } from '@vmo/share/17appTrack';\n\nimport {\n  WrapFilter,\n  NoData,\n  WrapLeaderboardItem,\n  FrameBorder,\n  ToggleButton,\n} from './style';\nimport { MissionPanelContext } from '../../context/missionPanelContext';\nimport { BonusPanelContext } from '../../context/bonusPanelContext';\n\n\nconst LeaderboardGeneral: React.FC<{\n  leaderboardData: LeaderboardItemInterface[];\n  render(item: LeaderboardItemInterface, showPanel: boolean): ReactNode;\n  itemHeight: number;\n  panelSize?: number;\n  withMissions?: boolean;\n  withBonus?: boolean;\n}> = ({\n  leaderboardData,\n  render,\n  itemHeight,\n  panelSize = 0,\n  withMissions = false,\n  withBonus = false,\n}) => {\n  const translation = useContext(TranslationContext);\n  const { data, handleOnChange } = useFilter(leaderboardData);\n  const refFilter = useRef(null);\n  const refLeaderboard = useRef(null);\n  const panelState = useContext(MissionPanelContext);\n  const { showPanelID, setShowPanelID, setMissionDetails } = panelState;\n  const panelState2 = useContext(BonusPanelContext);\n  const { showPanelID2, setShowPanelID2, setBonusDetails } = panelState2;\n\n\n  useMinSectionTracking(refFilter, () => {\n    trackingSource.track(createSectionViewAction('searchBar'));\n  });\n\n  useMinSectionTracking(refLeaderboard, () => {\n    trackingSource.track(createSectionViewAction('leaderboardItem'));\n  });\n\n  const handleToggleButton = (useId: string) => {\n    const newIndex = showPanelID === useId ? '' : useId;\n    setShowPanelID(newIndex);\n    setMissionDetails([]);\n  };\n\n  const Row = ({ index }: { index: number }) => (\n    <WrapLeaderboardItem key={data[index].userID}>\n      {render(data[index], showPanelID === data[index].userID)}\n      {withMissions && (\n        <ToggleButton\n          isOpen={showPanelID === data[index].userID}\n          onClick={() => handleToggleButton(data[index].userID)}\n        />\n      )}\n    </WrapLeaderboardItem>\n  );\n\n  const Filter = useMemo(\n    () => (\n      <WrapFilter ref={refFilter}>\n        <div>\n          <input\n          placeholder=\"請輸入主播ID\"\n            // placeholder={translation.get('SEARCH_PLACEHOLDER')}\n            onChange={evt => handleOnChange(evt.target.value)}\n          />\n        </div>\n      </WrapFilter>\n    ),\n    [handleOnChange, translation],\n  );\n\n  return (\n    <>\n      {/* {Filter}\n      <CopyButton data={data} /> */}\n      <FrameBorder ref={refLeaderboard}>\n      {Filter}\n      <CopyButton data={data} />\n        {data.length > 0 ? (\n          <VirtualizedList\n            dataset={data}\n            itemHeight={itemHeight}\n            updateOnID={showPanelID}\n            panelSize={panelSize}\n          >\n            {Row}\n          </VirtualizedList>\n        ) : (\n          <NoData>{translation.get('EMPTY_LEADERBOARD')}</NoData>\n        )}\n      </FrameBorder>\n    </>\n  );\n};\n\nexport default memo(\n  LeaderboardGeneral,\n  (prev, next) => JSON.stringify(prev) === JSON.stringify(next),\n);\n"]},"metadata":{},"sourceType":"module"}