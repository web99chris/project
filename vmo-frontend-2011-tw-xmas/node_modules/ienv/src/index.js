'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var Global = (1, eval)('this'); // eslint-disable-line no-eval

var isOf = function isOf(obj) {
  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  return '[object ' + type + ']' === Object.prototype.toString.call(obj);
};

var isBrowser = isOf(Global.document, 'HTMLDocument');
var isNode = isOf(Global.process, 'process');

var hasEnv = (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process.env;

if (!hasEnv) {
  console.warn("You don't have process.env. The `env`, `isDev` and `isProd` would be null");
}

var env = hasEnv ? process.env.NODE_ENV || 'development' : null;
var isDev = hasEnv ? env === 'development' : null;
var isProd = hasEnv ? env === 'production' : null;

module.exports = Object.freeze({
  global: Global,
  env: env,
  isDev: isDev,
  isProd: isProd,
  isBrowser: isBrowser,
  isNode: isNode
});