{"version":3,"file":"static/webpack/static\\development\\pages\\2011-tw-xmas-chris.js.7d1abc2891c28d2bfdd3.hot-update.js","sources":["webpack:///./components/EventIntro/EventIntro.tsx"],"sourcesContent":["// 2002-tw-alliance\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport styled from 'styled-components';\n\nimport { SectionTypes } from '@vmo/web/constants/config';\nimport {\n  useMinSectionTracking,\n  createSectionViewAction,\n} from '17media-browser-spy';\nimport { trackingSource } from '@vmo/share/17appTrack';\nimport { EventIntroHeaderStyled } from '@vmo/web/components/Tabs/styled';\nimport Images from '@vmo/web/themes/images';\n\ninterface EventIntroProps {\n  title?: string;\n  content?: string;\n  iframe?: string;\n  only?: boolean;\n}\n\nconst EventIntro = styled.div`\n  position: relative;\n  max-width: 800px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom:5px;\n\n  @media screen and (max-width: 800px) {\n    height: 450px;\n  }\n`;\n\n// const EventIntroTop = styled.div`\n//   width: 100%;\n//   height: 24.39vw;\n//   background-image: url(${Images.yellow1}), url(${Images.block1});\n//   background-repeat: no-repeat;\n//   background-size: 100% 102%, 95% 102%;\n//   background-position: top;\n//   @media screen and (min-width: 800px) {\n//     height: calc((800 / 828) * 202px);\n//   }\n// `;\n\n// const EventIntroBottom = styled.div`\n//   position: relative;\n//   z-index: 0;\n//   margin-top: -8px;\n//   width: 100%;\n//   height: 31.88vw;\n//   background-image: url(${Images.yellow3}), url(${Images.cloud}),\n//     url(${Images.block3});\n//   background-repeat: no-repeat;\n//   background-size: 100%, 100%, 95% 100%;\n//   background-position: top;\n//   @media screen and (min-width: 800px) {\n//     height: calc((800 / 828) * 264px);\n//   }\n// `;\n\n// const EventIntroHeader = styled.div`\n//   background-image: url(${Images.eventTitle});\n//   background-repeat: no-repeat;\n//   background-position: top;\n//   background-size: contain;\n//   width: 100%;\n//   height: 13.04vw;\n//   color: #000000;\n//   font-weight: 600;\n//   text-align: center;\n//   @media screen and (min-width: 800px) {\n//     font-size: calc((800 / 828) * 28px);\n//     height: calc((800 / 828) * 108px);\n//   }\n// `;\n\n// const EventIntroContent = styled.div`\n//   position: absolute;\n//   z-index: 1;\n//   width: 100%;\n//   display: flex;\n//   flex: 0 0 auto;\n//   flex-direction: column;\n//   justify-content: center;\n//   align-content: center;\n//   align-self: center;\n//   min-height: 40.33vw;\n//   font-size: 3.38vw;\n//   font-weight: 600;\n//   line-height: 1.43;\n//   color: #fff;\n//   background-image: url(${Images.yellow2}), url(${Images.block2});\n//   background-repeat: repeat-y, repeat-y;\n//   background-size: 100%, 95%;\n//   background-position: top;\n  \n//   @media screen and (min-width: 800px) {\n//     font-size: calc((800 / 828) * 28px);\n//     min-height: calc((800 / 828) * 334px);\n//   }\n//   iframe {\n//      margin-top: -12.8vw;\n//     @media screen and (min-width: 800px) {\n//       margin-top: calc((800 / 828) * -106px);\n//     }\n//   }\n// `;\n\nconst Iframe: React.FC<{ src: string }> = ({ src }) => {\n\n  \n  useEffect(() => {\n    const frame = document.querySelector('#frame') as HTMLElement;\n    frame.style.overflow = 'hidden';\n    window.addEventListener('message', e => {\n      if (\n        e.data.source &&\n        e.data.source.indexOf('main-vision') === -1 &&\n        e.data.size\n      ) {\n        frame.style.height = `${e.data.size.height}px`;\n      }\n    });\n    return () => window.removeEventListener('message', () => {});\n  }, []);\n\n\n\n\n  return (\n    <iframe\n      id=\"frame\"\n      src={src}\n      frameBorder=\"0\"\n      width=\"90%\"\n      scrolling=\"no\"\n      title=\"event description\"\n    />\n  );\n};\n\nconst EventIntroComponent: React.FC<EventIntroProps> = ({\n  title,\n  content,\n  iframe,\n  only,\n}) => {\n  const descriptionRef = useRef(null);\n  useMinSectionTracking(descriptionRef, () => {\n    trackingSource.track(createSectionViewAction(SectionTypes.description));\n  });\n  if (only) {\n    return (\n      <div ref={descriptionRef}>\n        <Iframe src={iframe} />\n      </div>\n    );\n  }\n  if (iframe) {\n    return (\n      <EventIntro ref={descriptionRef}>\n        {/* <EventIntroHeaderStyled>{title}</EventIntroHeaderStyled> */}\n        <Iframe src={iframe} />\n      </EventIntro>\n    );\n  }\n  return (\n    <EventIntro ref={descriptionRef}>\n      {/* <EventIntroHeaderStyled>{title}</EventIntroHeaderStyled> */}\n      {content ? (\n        <EventIntroContent\n          dangerouslySetInnerHTML={{\n            __html: `${content.replace(/\\n/g, '<br/>')}`,\n          }}\n        />\n      ) : null}\n    </EventIntro>\n  );\n};\n\nexport default EventIntroComponent;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAIA;AAWA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AAPA;AASA;AAZA;AAkBA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBA;AACA;AAgCA;AAAA;AAAA;AAAA;AAIA;AAJA;AAMA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7BA;AACA;AAsCA;;;;A","sourceRoot":""}