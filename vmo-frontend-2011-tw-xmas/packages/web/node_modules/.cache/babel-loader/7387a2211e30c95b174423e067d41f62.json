{"ast":null,"code":"// import React,{useContext} from 'react';\n// import { WrapBonusPanel, Borderline } from './style';\n// import { BonusPanelContext } from '../../context/bonusPanelContext';\n// export default ({ meta }) => {\n//   return (\n//     <WrapBonusPanel>\n//       <div className=\"bonus_title\">加分詳情</div>\n//       <section>\n//         <div>\n//           <span>階段四</span> <span>+{meta.s4 || 0}</span>\n//         </div>\n//         <div>\n//           <span>Round 2</span> <span>+{meta.r2 || 0}</span>\n//         </div>\n//       </section>\n//       <Borderline />\n//     </WrapBonusPanel>\n//   );\n// };\n//---------------------------------------------------------------\n// import React, { useContext, useEffect, useRef, memo } from 'react';\n// import axios, { CancelTokenSource } from 'axios';\n// import { WrapBonusPanel,WrapMetaScore,WrapPanel,Borderline } from './style';\n// import Loading from '@vmo/ui/Loading';\n// import { getEventoryDetails } from '@vmo/share/services/leaderboardEventory.service';\n// import { BonusPanelContext } from '../../context/bonusPanelContext';\n// const RenderBonus = ({ bonus, score }) => {\n//   return (\n//     <WrapBonusPanel>\n//       <div className=\"bonus-title\">{bonus.title}</div>\n//         <div className=\"bonus-score\">\n//           {score}分\n//         </div>\n//     </WrapBonusPanel>\n//   );\n// };\n// export default memo(({ condition, userID, meta = {} }) => {\n//   const source = useRef<CancelTokenSource>();\n//   const panelState = useContext(BonusPanelContext);\n//   const { BonusDetails, setBonusDetails } = panelState;\n//   const { needRequest, bonus } = condition;\n//   useEffect(() => {\n//     if (needRequest && BonusDetails.length === 0) {\n//       const subKeys = userID;\n//       source.current = axios.CancelToken.source();\n//       const cancelToken = source.current.token;\n//       getEventoryDetails(condition.containerID, subKeys, cancelToken).then(\n//         result => {\n//           const detailList = [];\n//           if (result && result.data) {\n//             result.data.forEach(item => {\n//               if (item.meta && item.meta.metaKey)\n//                 detailList.push({\n//                   metaKey: item.meta.metaKey,\n//                   score: item.score,\n//                 });\n//             });\n//           } else {\n//             detailList.push({\n//               metaKey: '',\n//               score: 0,\n//             });\n//           }\n//           setBonusDetails(detailList);\n//         },\n//       );\n//     }\n//     return () => {\n//       if (source.current) source.current.cancel();\n//     };\n//   }, [\n//     condition.containerID,\n//     BonusDetails.length,\n//     needRequest,\n//     setBonusDetails,\n//     userID,\n//   ]);\n//   const RenderMetaScore = ({ meta }) => {\n//     return (\n//       // <WrapMetaScore>\n//       //   <div className=\"bonus-title\">{bonus.title}</div>\n//       //   <div className=\"bonus-description\">+ {meta.s4 || 0} 分</div>\n//       //   <div className=\"bonus-description\">+ {meta.r2 || 0} 分</div>\n//       // </WrapMetaScore>\n//     <WrapBonusPanel>\n//       <div className=\"bonus_title\">加分詳情</div>\n//       <section>\n//         <div>\n//           <span>階段四</span> <span>+{meta.s4 || 0}</span>\n//         </div>\n//         <div>\n//           <span>Round 2</span> <span>+{meta.r2 || 0}</span>\n//         </div>\n//       </section>\n//       <Borderline />\n//     </WrapBonusPanel>\n//     );\n//   };\n//   if (needRequest && BonusDetails.length === 0) {\n//     return (\n//       <WrapPanel>\n//         <Loading color=\"#ffffff\" />\n//       </WrapPanel>\n//     );\n//   }\n//   return (\n//     <WrapPanel>\n//       {bonus.map(item => {\n//         if (needRequest) {\n//           // let isChecked = false;\n//           let score = 0;\n//           if (BonusDetails.length > 0) {\n//             const bonusMatched = BonusDetails.find(detail =>\n//               detail.metaKey.includes(item.metaKey),\n//             );\n//             // if (bonusMatched) {\n//             //   isChecked = bonusMatched.score >= item.threshold;\n//             //   score =\n//             //   bonusMatched.score >= item.threshold\n//             //       ? item.threshold\n//             //       : bonusMatched.score;\n//             // }\n//           }\n//           return (\n//             <RenderBonus\n//               key={item.title}\n//               bonus={item}\n//               score={score}\n//             />\n//           );\n//         }\n//         return <RenderMetaScore key={item.title} bonus={item} />;\n//       })}\n//     </WrapPanel>\n//   );\n// });","map":{"version":3,"sources":["D:/17專案/客製化ui專案/vmo-frontend-2011-tw-xmas/packages/web/components/leaderboard/BonusPanel.tsx"],"names":[],"mappings":"AAAA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React,{useContext} from 'react';\r\n// import { WrapBonusPanel, Borderline } from './style';\r\n// import { BonusPanelContext } from '../../context/bonusPanelContext';\r\n\r\n\r\n// export default ({ meta }) => {\r\n//   return (\r\n   \r\n//     <WrapBonusPanel>\r\n//       <div className=\"bonus_title\">加分詳情</div>\r\n//       <section>\r\n//         <div>\r\n//           <span>階段四</span> <span>+{meta.s4 || 0}</span>\r\n//         </div>\r\n//         <div>\r\n//           <span>Round 2</span> <span>+{meta.r2 || 0}</span>\r\n//         </div>\r\n//       </section>\r\n//       <Borderline />\r\n//     </WrapBonusPanel>\r\n  \r\n//   );\r\n// };\r\n\r\n\r\n\r\n//---------------------------------------------------------------\r\n// import React, { useContext, useEffect, useRef, memo } from 'react';\r\n// import axios, { CancelTokenSource } from 'axios';\r\n// import { WrapBonusPanel,WrapMetaScore,WrapPanel,Borderline } from './style';\r\n// import Loading from '@vmo/ui/Loading';\r\n// import { getEventoryDetails } from '@vmo/share/services/leaderboardEventory.service';\r\n// import { BonusPanelContext } from '../../context/bonusPanelContext';\r\n\r\n// const RenderBonus = ({ bonus, score }) => {\r\n//   return (\r\n//     <WrapBonusPanel>\r\n//       <div className=\"bonus-title\">{bonus.title}</div>\r\n//         <div className=\"bonus-score\">\r\n//           {score}分\r\n//         </div>\r\n//     </WrapBonusPanel>\r\n//   );\r\n// };\r\n\r\n// export default memo(({ condition, userID, meta = {} }) => {\r\n//   const source = useRef<CancelTokenSource>();\r\n//   const panelState = useContext(BonusPanelContext);\r\n//   const { BonusDetails, setBonusDetails } = panelState;\r\n\r\n//   const { needRequest, bonus } = condition;\r\n\r\n//   useEffect(() => {\r\n//     if (needRequest && BonusDetails.length === 0) {\r\n//       const subKeys = userID;\r\n//       source.current = axios.CancelToken.source();\r\n//       const cancelToken = source.current.token;\r\n//       getEventoryDetails(condition.containerID, subKeys, cancelToken).then(\r\n//         result => {\r\n//           const detailList = [];\r\n//           if (result && result.data) {\r\n//             result.data.forEach(item => {\r\n//               if (item.meta && item.meta.metaKey)\r\n//                 detailList.push({\r\n//                   metaKey: item.meta.metaKey,\r\n//                   score: item.score,\r\n//                 });\r\n//             });\r\n//           } else {\r\n//             detailList.push({\r\n//               metaKey: '',\r\n//               score: 0,\r\n//             });\r\n//           }\r\n\r\n//           setBonusDetails(detailList);\r\n//         },\r\n//       );\r\n//     }\r\n//     return () => {\r\n//       if (source.current) source.current.cancel();\r\n//     };\r\n//   }, [\r\n//     condition.containerID,\r\n//     BonusDetails.length,\r\n//     needRequest,\r\n//     setBonusDetails,\r\n//     userID,\r\n//   ]);\r\n\r\n//   const RenderMetaScore = ({ meta }) => {\r\n//     return (\r\n//       // <WrapMetaScore>\r\n//       //   <div className=\"bonus-title\">{bonus.title}</div>\r\n//       //   <div className=\"bonus-description\">+ {meta.s4 || 0} 分</div>\r\n//       //   <div className=\"bonus-description\">+ {meta.r2 || 0} 分</div>\r\n//       // </WrapMetaScore>\r\n//     <WrapBonusPanel>\r\n//       <div className=\"bonus_title\">加分詳情</div>\r\n//       <section>\r\n//         <div>\r\n//           <span>階段四</span> <span>+{meta.s4 || 0}</span>\r\n//         </div>\r\n//         <div>\r\n//           <span>Round 2</span> <span>+{meta.r2 || 0}</span>\r\n//         </div>\r\n//       </section>\r\n//       <Borderline />\r\n//     </WrapBonusPanel>\r\n//     );\r\n//   };\r\n\r\n//   if (needRequest && BonusDetails.length === 0) {\r\n//     return (\r\n//       <WrapPanel>\r\n//         <Loading color=\"#ffffff\" />\r\n//       </WrapPanel>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <WrapPanel>\r\n//       {bonus.map(item => {\r\n//         if (needRequest) {\r\n//           // let isChecked = false;\r\n//           let score = 0;\r\n//           if (BonusDetails.length > 0) {\r\n//             const bonusMatched = BonusDetails.find(detail =>\r\n//               detail.metaKey.includes(item.metaKey),\r\n//             );\r\n//             // if (bonusMatched) {\r\n//             //   isChecked = bonusMatched.score >= item.threshold;\r\n//             //   score =\r\n//             //   bonusMatched.score >= item.threshold\r\n//             //       ? item.threshold\r\n//             //       : bonusMatched.score;\r\n//             // }\r\n//           }\r\n//           return (\r\n//             <RenderBonus\r\n//               key={item.title}\r\n//               bonus={item}\r\n//               score={score}\r\n//             />\r\n//           );\r\n//         }\r\n//         return <RenderMetaScore key={item.title} bonus={item} />;\r\n//       })}\r\n//     </WrapPanel>\r\n//   );\r\n// });\r\n\r\n"]},"metadata":{},"sourceType":"module"}