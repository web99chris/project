{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"D:\\\\17\\u5C08\\u6848\\\\\\u5BA2\\u88FD\\u5316ui\\u5C08\\u6848\\\\vmo-frontend-2011-tw-xmas\\\\packages\\\\web\\\\components\\\\leaderboard\\\\LeaderboardGeneral.tsx\";\nimport React, { useContext, memo, useMemo, useRef } from 'react';\nimport { useMinSectionTracking, createSectionViewAction } from '17media-browser-spy';\nimport { VirtualizedList, CopyButton } from '@vmo/ui';\nimport { TranslationContext } from '@vmo/web/context/translationContext';\nimport { useFilter } from '@vmo/ui/hooks';\nimport { trackingSource } from '@vmo/share/17appTrack';\nimport { WrapFilter, NoData, WrapLeaderboardItem, FrameBorder, ToggleButton, BonusToggleButton } from './style';\nimport { MissionPanelContext } from '../../context/missionPanelContext';\n\nconst LeaderboardGeneral = ({\n  leaderboardData,\n  render,\n  itemHeight,\n  panelSize = 0,\n  panelSize2 = 0,\n  withMissions = false,\n  withBonus = false\n}) => {\n  const translation = useContext(TranslationContext);\n  const {\n    data,\n    handleOnChange\n  } = useFilter(leaderboardData);\n  const refFilter = useRef(null);\n  const refLeaderboard = useRef(null);\n  const panelState = useContext(MissionPanelContext);\n  const {\n    showPanelID,\n    setShowPanelID,\n    setMissionDetails\n  } = panelState;\n  const panelState2 = useContext(BonusPanelContext);\n  const {\n    showPanelID2,\n    setShowPanelID2,\n    setBonusDetails\n  } = panelState2;\n  useMinSectionTracking(refFilter, () => {\n    trackingSource.track(createSectionViewAction('searchBar'));\n  });\n  useMinSectionTracking(refLeaderboard, () => {\n    trackingSource.track(createSectionViewAction('leaderboardItem'));\n  });\n\n  const handleToggleButton = useId => {\n    const newIndex = showPanelID === useId ? '' : useId;\n    const newIndex2 = showPanelID === useId ? '' : useId;\n    setShowPanelID(newIndex);\n    setShowPanelID2(newIndex2);\n    setMissionDetails([]);\n    console.log('showPanelID:' + showPanelID + '   newIndex:' + newIndex + '   useId:' + useId);\n  }; // const handleToggleButton2 = (useId2: string) => {\n  //   const newIndex2 = showPanelID2 === useId2 ? '' : useId2;\n  //   setShowPanelID2(newIndex2); //寫入newIndex2無效\n  //   setBonusDetails([]);\n  //   console.log( 'showPanelID2:'+showPanelID2 +'   newIndex2:'+ newIndex2 +'   useId2:'+ useId2 );\n  // };\n\n\n  const Row = ({\n    index\n  }) => /*#__PURE__*/React.createElement(WrapLeaderboardItem, {\n    key: data[index].userID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, render(data[index], showPanelID === data[index].userID, showPanelID2 === data[index].userID), withMissions && withBonus ? /*#__PURE__*/React.createElement(BonusToggleButton, {\n    isOpen: showPanelID === data[index].userID,\n    onClick: () => handleToggleButton(data[index].userID),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }) : withMissions ? /*#__PURE__*/React.createElement(ToggleButton, {\n    isOpen: showPanelID === data[index].userID,\n    onClick: () => handleToggleButton(data[index].userID),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }) : null);\n\n  const Filter = useMemo(() => /*#__PURE__*/React.createElement(WrapFilter, {\n    ref: refFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"\\u8ACB\\u8F38\\u5165\\u4E3B\\u64ADID\" // placeholder={translation.get('SEARCH_PLACEHOLDER')}\n    ,\n    onChange: evt => handleOnChange(evt.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }))), [handleOnChange, translation]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FrameBorder, {\n    ref: refLeaderboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, Filter, /*#__PURE__*/React.createElement(CopyButton, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), data.length > 0 ? /*#__PURE__*/React.createElement(VirtualizedList, {\n    dataset: data,\n    itemHeight: itemHeight,\n    updateOnID: showPanelID,\n    updateOnID2: showPanelID2,\n    panelSize: panelSize,\n    panelSize2: panelSize2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, Row) : /*#__PURE__*/React.createElement(NoData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, translation.get('EMPTY_LEADERBOARD'))));\n};\n\nexport default memo(LeaderboardGeneral, (prev, next) => _JSON$stringify(prev) === _JSON$stringify(next));","map":{"version":3,"sources":["D:/17專案/客製化ui專案/vmo-frontend-2011-tw-xmas/packages/web/components/leaderboard/LeaderboardGeneral.tsx"],"names":["LeaderboardGeneral","panelSize","panelSize2","withMissions","withBonus","translation","useContext","handleOnChange","useFilter","refFilter","useRef","refLeaderboard","panelState","setMissionDetails","panelState2","setBonusDetails","useMinSectionTracking","trackingSource","createSectionViewAction","handleToggleButton","useId","newIndex","showPanelID","newIndex2","setShowPanelID","setShowPanelID2","console","Row","index","data","render","showPanelID2","Filter","useMemo","evt","memo"],"mappings":";;AAAA,OAAA,KAAA,IAAA,UAAA,EAAA,IAAA,EAAA,OAAA,EAAA,MAAA,QAAA,OAAA;AACA,SAAA,qBAAA,EAAA,uBAAA,QAAA,qBAAA;AAKA,SAAA,eAAA,EAAA,UAAA,QAAA,SAAA;AAEA,SAAA,kBAAA,QAAA,qCAAA;AACA,SAAA,SAAA,QAAA,eAAA;AACA,SAAA,cAAA,QAAA,uBAAA;AAEA,SAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,WAAA,EAAA,YAAA,EAAA,iBAAA,QAAA,SAAA;AAQA,SAAA,mBAAA,QAAA,mCAAA;;AAGA,MAAMA,kBAQJ,GAAG,CAAC;AAAA,EAAA,eAAA;AAAA,EAAA,MAAA;AAAA,EAAA,UAAA;AAIJC,EAAAA,SAAS,GAJL,CAAA;AAKJC,EAAAA,UAAU,GALN,CAAA;AAMJC,EAAAA,YAAY,GANR,KAAA;AAOJC,EAAAA,SAAS,GAAG;AAPR,CAAD,KAQC;AACJ,QAAMC,WAAW,GAAGC,UAAU,CAA9B,kBAA8B,CAA9B;AACA,QAAM;AAAA,IAAA,IAAA;AAAQC,IAAAA;AAAR,MAA2BC,SAAS,CAA1C,eAA0C,CAA1C;AACA,QAAMC,SAAS,GAAGC,MAAM,CAAxB,IAAwB,CAAxB;AACA,QAAMC,cAAc,GAAGD,MAAM,CAA7B,IAA6B,CAA7B;AACA,QAAME,UAAU,GAAGN,UAAU,CAA7B,mBAA6B,CAA7B;AACA,QAAM;AAAA,IAAA,WAAA;AAAA,IAAA,cAAA;AAA+BO,IAAAA;AAA/B,MAAN,UAAA;AACA,QAAMC,WAAW,GAAGR,UAAU,CAA9B,iBAA8B,CAA9B;AACA,QAAM;AAAA,IAAA,YAAA;AAAA,IAAA,eAAA;AAAiCS,IAAAA;AAAjC,MAAN,WAAA;AAGAC,EAAAA,qBAAqB,CAAA,SAAA,EAAY,MAAM;AACrCC,IAAAA,cAAc,CAAdA,KAAAA,CAAqBC,uBAAuB,CAA5CD,WAA4C,CAA5CA;AADFD,GAAqB,CAArBA;AAIAA,EAAAA,qBAAqB,CAAA,cAAA,EAAiB,MAAM;AAC1CC,IAAAA,cAAc,CAAdA,KAAAA,CAAqBC,uBAAuB,CAA5CD,iBAA4C,CAA5CA;AADFD,GAAqB,CAArBA;;AAIA,QAAMG,kBAAkB,GAAIC,KAAD,IAAmB;AAC5C,UAAMC,QAAQ,GAAGC,WAAW,KAAXA,KAAAA,GAAAA,EAAAA,GAAjB,KAAA;AACA,UAAMC,SAAS,GAAGD,WAAW,KAAXA,KAAAA,GAAAA,EAAAA,GAAlB,KAAA;AACAE,IAAAA,cAAc,CAAdA,QAAc,CAAdA;AACAC,IAAAA,eAAe,CAAfA,SAAe,CAAfA;AACAZ,IAAAA,iBAAiB,CAAjBA,EAAiB,CAAjBA;AACAa,IAAAA,OAAO,CAAPA,GAAAA,CAAa,iBAAA,WAAA,GAAA,cAAA,GAAA,QAAA,GAAA,WAAA,GAAbA,KAAAA;AAzBE,GAmBJ,CAnBI,CA4BJ;AACA;AACA;AACA;AACA;AACA;;;AAGA,QAAMC,GAAG,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAA,aACV,KAAA,CAAA,aAAA,CAAA,mBAAA,EAAA;AAAqB,IAAA,GAAG,EAAEC,IAAI,CAAJA,KAAI,CAAJA,CAA1B,MAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EACGC,MAAM,CAACD,IAAI,CAAL,KAAK,CAAL,EAAcP,WAAW,KAAKO,IAAI,CAAJA,KAAI,CAAJA,CAA9B,MAAA,EAAkDE,YAAY,KAAKF,IAAI,CAAJA,KAAI,CAAJA,CAD5E,MACS,CADT,EASM,YAAY,IAAZ,SAAA,GAAA,aACF,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA;AACA,IAAA,MAAM,EAAEP,WAAW,KAAKO,IAAI,CAAJA,KAAI,CAAJA,CADxB,MAAA;AAEA,IAAA,OAAO,EAAE,MAAMV,kBAAkB,CAACU,IAAI,CAAJA,KAAI,CAAJA,CAFlC,MAEiC,CAFjC;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CADE,GAOF1B,YAAY,GAAA,aAEZ,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA;AACQ,IAAA,MAAM,EAAEmB,WAAW,KAAKO,IAAI,CAAJA,KAAI,CAAJA,CADhC,MAAA;AAEQ,IAAA,OAAO,EAAE,MAAMV,kBAAkB,CAACU,IAAI,CAAJA,KAAI,CAAJA,CAF1C,MAEyC,CAFzC;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAFY,GAjBlB,IACE,CADF;;AAgCA,QAAMG,MAAM,GAAGC,OAAO,CACpB,MAAA,aACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAAY,IAAA,GAAG,EAAf,SAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACA,IAAA,WAAW,EADX,kCAAA,CAEE;AAFF;AAGE,IAAA,QAAQ,EAAEC,GAAG,IAAI3B,cAAc,CAAC2B,GAAG,CAAHA,MAAAA,CAHlC,KAGiC,CAHjC;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CADF,CADF,CAFkB,EAYpB,CAAA,cAAA,EAZF,WAYE,CAZoB,CAAtB;AAeA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAA,aAGE,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA;AAAa,IAAA,GAAG,EAAhB,cAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAA,MAAA,EAAA,aAEA,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAAY,IAAA,IAAI,EAAhB,IAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAFA,EAGGL,IAAI,CAAJA,MAAAA,GAAAA,CAAAA,GAAAA,aACC,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA;AACE,IAAA,OAAO,EADT,IAAA;AAEE,IAAA,UAAU,EAFZ,UAAA;AAGE,IAAA,UAAU,EAHZ,WAAA;AAIE,IAAA,WAAW,EAJb,YAAA;AAKE,IAAA,SAAS,EALX,SAAA;AAME,IAAA,UAAU,EANZ,UAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EADDA,GACC,CADDA,GAAAA,aAYC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAASxB,WAAW,CAAXA,GAAAA,CAnBjB,mBAmBiBA,CAAT,CAfJ,CAHF,CADF;AAnGF,CAAA;;AA6HA,eAAe8B,IAAI,CAAA,kBAAA,EAEjB,CAAA,IAAA,EAAA,IAAA,KAAgB,eAAA,CAAA,IAAA,CAAA,KAAyB,eAAA,CAF3C,IAE2C,CAFxB,CAAnB","sourcesContent":["import React, { useContext, memo, useMemo, ReactNode, useRef } from 'react';\nimport {\n  useMinSectionTracking,\n  createSectionViewAction,\n} from '17media-browser-spy';\n\nimport { VirtualizedList, CopyButton } from '@vmo/ui';\nimport { LeaderboardItem as LeaderboardItemInterface } from '@vmo/share/interfaces/LeaderboardItem';\nimport { TranslationContext } from '@vmo/web/context/translationContext';\nimport { useFilter } from '@vmo/ui/hooks';\nimport { trackingSource } from '@vmo/share/17appTrack';\n\nimport {\n  WrapFilter,\n  NoData,\n  WrapLeaderboardItem,\n  FrameBorder,\n  ToggleButton,\n  BonusToggleButton,\n} from './style';\nimport { MissionPanelContext } from '../../context/missionPanelContext';\n\n\nconst LeaderboardGeneral: React.FC<{\n  leaderboardData: LeaderboardItemInterface[];\n  render(item: LeaderboardItemInterface, showPanel: boolean , showPanel2: boolean): ReactNode;\n  itemHeight: number;\n  panelSize?: number;\n  panelSize2?: number;\n  withMissions?: boolean;\n  withBonus?: boolean;\n}> = ({\n  leaderboardData,\n  render,\n  itemHeight,\n  panelSize = 0,\n  panelSize2 = 0,\n  withMissions = false,\n  withBonus = false,\n}) => {\n  const translation = useContext(TranslationContext);\n  const { data, handleOnChange } = useFilter(leaderboardData);\n  const refFilter = useRef(null);\n  const refLeaderboard = useRef(null);\n  const panelState = useContext(MissionPanelContext);\n  const { showPanelID, setShowPanelID, setMissionDetails } = panelState;\n  const panelState2 = useContext(BonusPanelContext);\n  const { showPanelID2, setShowPanelID2, setBonusDetails } = panelState2;\n\n\n  useMinSectionTracking(refFilter, () => {\n    trackingSource.track(createSectionViewAction('searchBar'));\n  });\n\n  useMinSectionTracking(refLeaderboard, () => {\n    trackingSource.track(createSectionViewAction('leaderboardItem'));\n  });\n\n  const handleToggleButton = (useId: string) => {\n    const newIndex = showPanelID === useId ? '' : useId;\n    const newIndex2 = showPanelID === useId ? '' : useId;\n    setShowPanelID(newIndex);\n    setShowPanelID2(newIndex2);\n    setMissionDetails([]);\n    console.log( 'showPanelID:'+showPanelID +'   newIndex:'+ newIndex +'   useId:'+ useId );\n  };\n\n  // const handleToggleButton2 = (useId2: string) => {\n  //   const newIndex2 = showPanelID2 === useId2 ? '' : useId2;\n  //   setShowPanelID2(newIndex2); //寫入newIndex2無效\n  //   setBonusDetails([]);\n  //   console.log( 'showPanelID2:'+showPanelID2 +'   newIndex2:'+ newIndex2 +'   useId2:'+ useId2 );\n  // };\n\n\n  const Row = ({ index }: { index: number }) => (\n    <WrapLeaderboardItem key={data[index].userID}>\n      {render(data[index], showPanelID === data[index].userID ,showPanelID2 === data[index].userID) }\n\n      {/* {withMissions && (\n        <ToggleButton\n          isOpen={showPanelID === data[index].userID}\n          onClick={() => handleToggleButton(data[index].userID)}\n        />\n      )} */}\n         {withMissions && withBonus ?(\n        <BonusToggleButton\n        isOpen={showPanelID === data[index].userID}\n        onClick={() => handleToggleButton(data[index].userID)}\n        />\n        ) :\n\n        withMissions? (\n\n        <ToggleButton\n                isOpen={showPanelID === data[index].userID}\n                onClick={() => handleToggleButton(data[index].userID)}\n              />\n\n        ): null}\n\n\n    </WrapLeaderboardItem>\n  );\n\n\n\n  const Filter = useMemo(\n    () => (\n      <WrapFilter ref={refFilter}>\n        <div>\n          <input\n          placeholder=\"請輸入主播ID\"\n            // placeholder={translation.get('SEARCH_PLACEHOLDER')}\n            onChange={evt => handleOnChange(evt.target.value)}\n          />\n        </div>\n      </WrapFilter>\n    ),\n    [handleOnChange, translation],\n  );\n\n  return (\n    <>\n      {/* {Filter}\n      <CopyButton data={data} /> */}\n      <FrameBorder ref={refLeaderboard}>\n      {Filter}\n      <CopyButton data={data} />\n        {data.length > 0 ? (\n          <VirtualizedList\n            dataset={data}\n            itemHeight={itemHeight}\n            updateOnID={showPanelID}\n            updateOnID2={showPanelID2}\n            panelSize={panelSize}\n            panelSize2={panelSize2}\n          >\n            {Row}\n          </VirtualizedList>\n        ) : (\n          <NoData>{translation.get('EMPTY_LEADERBOARD')}</NoData>\n        )}\n      </FrameBorder>\n    </>\n  );\n};\n\nexport default memo(\n  LeaderboardGeneral,\n  (prev, next) => JSON.stringify(prev) === JSON.stringify(next),\n);\n"]},"metadata":{},"sourceType":"module"}