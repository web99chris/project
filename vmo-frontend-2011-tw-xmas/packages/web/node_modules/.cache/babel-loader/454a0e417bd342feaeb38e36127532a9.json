{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"D:\\\\17\\u5C08\\u6848\\\\\\u5BA2\\u88FD\\u5316ui\\u5C08\\u6848\\\\2011-tw-xmas chris\\\\vmo-frontend-2011-tw-xmas\\\\packages\\\\web\\\\components\\\\leaderboard\\\\MissionPanel.tsx\";\nimport React, { memo, useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { createPortal } from 'react-dom';\nimport { numberFormat, qs } from '@vmo/share/utils';\nimport { getEventoryDetails, getLeaderboardEventory } from '@vmo/share/services/leaderboardEventory.service';\nimport { THUMBNAIL_BASE_URL, DEFAULT_AVATAR } from '@vmo/share/CONST';\nimport { MissionPanelWrap, MissionItem, UserAvatar } from './style';\n\nconst MissionPanel = ({\n  condition\n}) => {\n  const {\n    missions,\n    containerID\n  } = condition;\n  const queryString = qs();\n  const [isOpen, setIsOpen] = useState(false);\n  const [missionScores, setMissionScores] = useState({});\n  const [userDetail, setUserDetail] = useState(null);\n  const source = useRef();\n  const userInfoSource = useRef();\n  useEffect(() => {\n    if (queryString.userID) {\n      localStorage.setItem('2010-xmas-userID', queryString.userID);\n    }\n\n    if (localStorage.getItem('2010-xmas-userID')) {\n      const subKeys = localStorage.getItem('2010-xmas-userID');\n      source.current = axios.CancelToken.source();\n      userInfoSource.current = axios.CancelToken.source();\n      const cancelToken = source.current.token;\n      const userInfoCancelToken = userInfoSource.current.token;\n      getLeaderboardEventory(containerID, userInfoCancelToken, 1000, '', 'GET').then(result => {\n        if (result && result.length) {\n          const user = result.find(item => item.userInfo.userID === subKeys);\n\n          if (user) {\n            setUserDetail(user);\n          }\n        }\n      });\n      getEventoryDetails(containerID, subKeys, cancelToken).then(result => {\n        const detailList = {};\n\n        if (result && result.data) {\n          result.data.forEach(item => {\n            if (item.meta && item.meta.eventoryKey) {\n              detailList[item.meta.eventoryKey] = item.score;\n            }\n          });\n        }\n\n        setMissionScores(detailList);\n      });\n    }\n\n    return () => {\n      if (source.current) source.current.cancel();\n      if (userInfoSource.current) userInfoSource.current.cancel();\n    };\n  }, [containerID, queryString.userID]);\n  let avatar = '';\n\n  if (userDetail && userDetail.userInfo) {\n    avatar = userDetail.userInfo.picture && userDetail.userInfo.picture.startsWith('http') ? userDetail.userInfo.picture : THUMBNAIL_BASE_URL + userDetail.userInfo.picture;\n  }\n\n  if (!userDetail) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(MissionPanelWrap, {\n    isOpen: isOpen,\n    withUserInfo: !!userDetail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mission-button\",\n    onClick: () => setIsOpen(!isOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), userDetail && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mission-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(UserAvatar, {\n    style: {\n      backgroundImage: `url(${avatar}), url(${DEFAULT_AVATAR})`,\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mission-user_info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mission-user_info--user_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, userDetail.userInfo.displayName || userDetail.userInfo.openID), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mission-user_info--user_score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, numberFormat(userDetail.score || 0), \" \\u97FF\\u53EE\\u5679\"))), missions.map(mission => {\n    let isChecked = false;\n    let score = 0;\n\n    if (missionScores[mission.eventoryKey]) {\n      isChecked = missionScores[mission.eventoryKey] > mission.threshold;\n      score = missionScores[mission.eventoryKey] > mission.threshold ? mission.threshold : missionScores[mission.eventoryKey];\n    }\n\n    return /*#__PURE__*/React.createElement(MissionItem, {\n      checked: isChecked,\n      title: mission.title,\n      key: mission.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, mission.description, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }), mission.awardDescription, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mission-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"\\u76EE\\u524D\\u7D2F\\u7A4D\\u6578\\u91CF ( \", score, \" / \", mission.threshold, \" )\"));\n  })));\n};\n\nconst PortalMissionPanel = props => {\n  const el = document.createElement('div');\n  useEffect(() => {\n    const root = document.getElementById('__next');\n    root.appendChild(el);\n  }, [el]);\n  return createPortal( /*#__PURE__*/React.createElement(MissionPanel, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 23\n    }\n  })), el);\n};\n\nexport default memo(PortalMissionPanel); // import React, { memo, useState, useEffect, useRef } from 'react';\n// import axios, { CancelTokenSource } from 'axios';\n// import { createPortal } from 'react-dom';\n// import { numberFormat, qs } from '@vmo/share/utils';\n// import {\n//   getEventoryDetails,\n//   getLeaderboardEventory,\n// } from '@vmo/share/services/leaderboardEventory.service';\n// import { THUMBNAIL_BASE_URL, DEFAULT_AVATAR } from '@vmo/share/CONST';\n// import { MissionPanelWrap, MissionItem, UserAvatar } from './style';\n// const MissionPanel = ({ condition }) => {\n//   const { missions, containerID } = condition;\n//   const queryString = qs<{\n//     userID: string;\n//   }>();\n//   const [isOpen, setIsOpen] = useState(false);\n//   const [missionScores, setMissionScores] = useState({});\n//   const [userDetail, setUserDetail] = useState(null);\n//   const source = useRef<CancelTokenSource>();\n//   const userInfoSource = useRef<CancelTokenSource>();\n//   useEffect(() => {\n//     if (queryString.userID) {\n//       localStorage.setItem('2010-xmas-userID', queryString.userID);\n//     }\n//     if (localStorage.getItem('2010-xmas-userID')) {\n//       const subKeys = localStorage.getItem('2010-xmas-userID');\n//       source.current = axios.CancelToken.source();\n//       userInfoSource.current = axios.CancelToken.source();\n//       const cancelToken = source.current.token;\n//       const userInfoCancelToken = userInfoSource.current.token;\n//       getLeaderboardEventory(\n//         containerID,\n//         userInfoCancelToken,\n//         1000,\n//         '',\n//         'GET',\n//       ).then(result => {\n//         if (result && result.length) {\n//           const user = result.find(item => item.userInfo.userID === subKeys);\n//           if (user) {\n//             setUserDetail(user);\n//           }\n//         }\n//       });\n//       getEventoryDetails(containerID, subKeys, cancelToken).then(result => {\n//         const detailList = {};\n//         if (result && result.data) {\n//           result.data.forEach(item => {\n//             if (item.meta && item.meta.eventoryKey) {\n//               detailList[item.meta.eventoryKey] = item.score;\n//             }\n//           });\n//         }\n//         setMissionScores(detailList);\n//       });\n//     }\n//     return () => {\n//       if (source.current) source.current.cancel();\n//       if (userInfoSource.current) userInfoSource.current.cancel();\n//     };\n//   }, [containerID, queryString.userID]);\n//   let avatar = '';\n//   if (userDetail && userDetail.userInfo) {\n//     avatar =\n//       userDetail.userInfo!.picture &&\n//       userDetail.userInfo!.picture!.startsWith('http')\n//         ? userDetail.userInfo!.picture\n//         : THUMBNAIL_BASE_URL + userDetail.userInfo!.picture;\n//   }\n//   return (\n//     <MissionPanelWrap isOpen={isOpen} withUserInfo={!!userDetail}>\n//       <div>\n//         <div className=\"mission-button\" onClick={() => setIsOpen(!isOpen)} />\n//         {userDetail && (\n//           <div className=\"mission-user\">\n//             <UserAvatar\n//               style={{\n//                 backgroundImage: `url(${avatar}), url(${DEFAULT_AVATAR})`,\n//                 cursor: 'pointer',\n//               }}\n//             />\n//             <div className=\"mission-user_info\">\n//               <div className=\"mission-user_info--user_name\">\n//                 {userDetail.userInfo.displayName || userDetail.userInfo.openID}\n//               </div>\n//               <div className=\"mission-user_info--user_score\">\n//                 {numberFormat(userDetail.score || 0)} 響叮噹\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//         {missions.map(mission => {\n//           let isChecked = false;\n//           let score = 0;\n//           if (missionScores[mission.eventoryKey]) {\n//             isChecked = missionScores[mission.eventoryKey] > mission.threshold;\n//             score =\n//               missionScores[mission.eventoryKey] > mission.threshold\n//                 ? mission.threshold\n//                 : missionScores[mission.eventoryKey];\n//           }\n//           return (\n//             <MissionItem\n//               checked={isChecked}\n//               title={mission.title}\n//               key={mission.title}\n//             >\n//               {mission.description}\n//               <br />\n//               {mission.awardDescription}\n//               <div className=\"mission-score\">\n//                 目前累積數量 ( {score} / {mission.threshold} )\n//               </div>\n//             </MissionItem>\n//           );\n//         })}\n//       </div>\n//     </MissionPanelWrap>\n//   );\n// };\n// const PortalMissionPanel = props => {\n//   const el = document.createElement('div');\n//   useEffect(() => {\n//     const root = document.getElementById('__next');\n//     root.appendChild(el);\n//   }, [el]);\n//   return createPortal(<MissionPanel {...props} />, el);\n// };\n// export default memo(PortalMissionPanel);","map":{"version":3,"sources":["D:/17專案/客製化ui專案/2011-tw-xmas chris/vmo-frontend-2011-tw-xmas/packages/web/components/leaderboard/MissionPanel.tsx"],"names":["React","memo","useState","useEffect","useRef","axios","createPortal","numberFormat","qs","getEventoryDetails","getLeaderboardEventory","THUMBNAIL_BASE_URL","DEFAULT_AVATAR","MissionPanelWrap","MissionItem","UserAvatar","MissionPanel","condition","missions","containerID","queryString","isOpen","setIsOpen","missionScores","setMissionScores","userDetail","setUserDetail","source","userInfoSource","userID","localStorage","setItem","getItem","subKeys","current","CancelToken","cancelToken","token","userInfoCancelToken","then","result","length","user","find","item","userInfo","detailList","data","forEach","meta","eventoryKey","score","cancel","avatar","picture","startsWith","backgroundImage","cursor","displayName","openID","map","mission","isChecked","threshold","title","description","awardDescription","PortalMissionPanel","props","el","document","createElement","root","getElementById","appendChild"],"mappings":"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":["import React, { memo, useState, useEffect, useRef } from 'react';\nimport axios, { CancelTokenSource } from 'axios';\nimport { createPortal } from 'react-dom';\n\nimport { numberFormat, qs } from '@vmo/share/utils';\nimport {\n  getEventoryDetails,\n  getLeaderboardEventory,\n} from '@vmo/share/services/leaderboardEventory.service';\n\nimport { THUMBNAIL_BASE_URL, DEFAULT_AVATAR } from '@vmo/share/CONST';\nimport { MissionPanelWrap, MissionItem, UserAvatar } from './style';\n\nconst MissionPanel = ({ condition }) => {\n  const { missions, containerID } = condition;\n  const queryString = qs<{\n    userID: string;\n  }>();\n  const [isOpen, setIsOpen] = useState(false);\n  const [missionScores, setMissionScores] = useState({});\n  const [userDetail, setUserDetail] = useState(null);\n\n  const source = useRef<CancelTokenSource>();\n  const userInfoSource = useRef<CancelTokenSource>();\n\n  useEffect(() => {\n    if (queryString.userID) {\n      localStorage.setItem('2010-xmas-userID', queryString.userID);\n    }\n    if (localStorage.getItem('2010-xmas-userID')) {\n      const subKeys = localStorage.getItem('2010-xmas-userID');\n      source.current = axios.CancelToken.source();\n      userInfoSource.current = axios.CancelToken.source();\n      const cancelToken = source.current.token;\n      const userInfoCancelToken = userInfoSource.current.token;\n      getLeaderboardEventory(\n        containerID,\n        userInfoCancelToken,\n        1000,\n        '',\n        'GET',\n      ).then(result => {\n        if (result && result.length) {\n          const user = result.find(item => item.userInfo.userID === subKeys);\n          if (user) {\n            setUserDetail(user);\n          }\n        }\n      });\n      getEventoryDetails(containerID, subKeys, cancelToken).then(result => {\n        const detailList = {};\n        if (result && result.data) {\n          result.data.forEach(item => {\n            if (item.meta && item.meta.eventoryKey) {\n              detailList[item.meta.eventoryKey] = item.score;\n            }\n          });\n        }\n        setMissionScores(detailList);\n      });\n    }\n    return () => {\n      if (source.current) source.current.cancel();\n      if (userInfoSource.current) userInfoSource.current.cancel();\n    };\n  }, [containerID, queryString.userID]);\n\n  let avatar = '';\n  if (userDetail && userDetail.userInfo) {\n    avatar =\n      userDetail.userInfo!.picture &&\n      userDetail.userInfo!.picture!.startsWith('http')\n        ? userDetail.userInfo!.picture\n        : THUMBNAIL_BASE_URL + userDetail.userInfo!.picture;\n  }\n\n  if (!userDetail) {\n    return null;\n  }\n\n  return (\n    <MissionPanelWrap isOpen={isOpen} withUserInfo={!!userDetail}>\n      <div>\n        <div className=\"mission-button\" onClick={() => setIsOpen(!isOpen)} />\n        {userDetail && (\n          <div className=\"mission-user\">\n            <UserAvatar\n              style={{\n                backgroundImage: `url(${avatar}), url(${DEFAULT_AVATAR})`,\n                cursor: 'pointer',\n              }}\n            />\n\n            <div className=\"mission-user_info\">\n              <div className=\"mission-user_info--user_name\">\n                {userDetail.userInfo.displayName || userDetail.userInfo.openID}\n              </div>\n              <div className=\"mission-user_info--user_score\">\n                {numberFormat(userDetail.score || 0)} 響叮噹\n              </div>\n            </div>\n          </div>\n        )}\n        {missions.map(mission => {\n          let isChecked = false;\n          let score = 0;\n          if (missionScores[mission.eventoryKey]) {\n            isChecked = missionScores[mission.eventoryKey] > mission.threshold;\n            score =\n              missionScores[mission.eventoryKey] > mission.threshold\n                ? mission.threshold\n                : missionScores[mission.eventoryKey];\n          }\n\n          return (\n            <MissionItem\n              checked={isChecked}\n              title={mission.title}\n              key={mission.title}\n            >\n              {mission.description}\n              <br />\n              {mission.awardDescription}\n              <div className=\"mission-score\">\n                目前累積數量 ( {score} / {mission.threshold} )\n              </div>\n            </MissionItem>\n          );\n        })}\n      </div>\n    </MissionPanelWrap>\n  );\n};\n\nconst PortalMissionPanel = props => {\n  const el = document.createElement('div');\n  useEffect(() => {\n    const root = document.getElementById('__next');\n    root.appendChild(el);\n  }, [el]);\n\n  return createPortal(<MissionPanel {...props} />, el);\n};\n\nexport default memo(PortalMissionPanel);\n\n\n// import React, { memo, useState, useEffect, useRef } from 'react';\n// import axios, { CancelTokenSource } from 'axios';\n// import { createPortal } from 'react-dom';\n\n// import { numberFormat, qs } from '@vmo/share/utils';\n// import {\n//   getEventoryDetails,\n//   getLeaderboardEventory,\n// } from '@vmo/share/services/leaderboardEventory.service';\n\n// import { THUMBNAIL_BASE_URL, DEFAULT_AVATAR } from '@vmo/share/CONST';\n// import { MissionPanelWrap, MissionItem, UserAvatar } from './style';\n\n// const MissionPanel = ({ condition }) => {\n//   const { missions, containerID } = condition;\n//   const queryString = qs<{\n//     userID: string;\n//   }>();\n//   const [isOpen, setIsOpen] = useState(false);\n//   const [missionScores, setMissionScores] = useState({});\n//   const [userDetail, setUserDetail] = useState(null);\n\n//   const source = useRef<CancelTokenSource>();\n//   const userInfoSource = useRef<CancelTokenSource>();\n\n//   useEffect(() => {\n//     if (queryString.userID) {\n//       localStorage.setItem('2010-xmas-userID', queryString.userID);\n//     }\n//     if (localStorage.getItem('2010-xmas-userID')) {\n//       const subKeys = localStorage.getItem('2010-xmas-userID');\n//       source.current = axios.CancelToken.source();\n//       userInfoSource.current = axios.CancelToken.source();\n//       const cancelToken = source.current.token;\n//       const userInfoCancelToken = userInfoSource.current.token;\n//       getLeaderboardEventory(\n//         containerID,\n//         userInfoCancelToken,\n//         1000,\n//         '',\n//         'GET',\n//       ).then(result => {\n//         if (result && result.length) {\n//           const user = result.find(item => item.userInfo.userID === subKeys);\n//           if (user) {\n//             setUserDetail(user);\n//           }\n//         }\n//       });\n//       getEventoryDetails(containerID, subKeys, cancelToken).then(result => {\n//         const detailList = {};\n//         if (result && result.data) {\n//           result.data.forEach(item => {\n//             if (item.meta && item.meta.eventoryKey) {\n//               detailList[item.meta.eventoryKey] = item.score;\n//             }\n//           });\n//         }\n//         setMissionScores(detailList);\n//       });\n//     }\n//     return () => {\n//       if (source.current) source.current.cancel();\n//       if (userInfoSource.current) userInfoSource.current.cancel();\n//     };\n//   }, [containerID, queryString.userID]);\n\n//   let avatar = '';\n//   if (userDetail && userDetail.userInfo) {\n//     avatar =\n//       userDetail.userInfo!.picture &&\n//       userDetail.userInfo!.picture!.startsWith('http')\n//         ? userDetail.userInfo!.picture\n//         : THUMBNAIL_BASE_URL + userDetail.userInfo!.picture;\n//   }\n\n//   return (\n//     <MissionPanelWrap isOpen={isOpen} withUserInfo={!!userDetail}>\n//       <div>\n//         <div className=\"mission-button\" onClick={() => setIsOpen(!isOpen)} />\n//         {userDetail && (\n//           <div className=\"mission-user\">\n//             <UserAvatar\n//               style={{\n//                 backgroundImage: `url(${avatar}), url(${DEFAULT_AVATAR})`,\n//                 cursor: 'pointer',\n//               }}\n//             />\n\n//             <div className=\"mission-user_info\">\n//               <div className=\"mission-user_info--user_name\">\n//                 {userDetail.userInfo.displayName || userDetail.userInfo.openID}\n//               </div>\n//               <div className=\"mission-user_info--user_score\">\n//                 {numberFormat(userDetail.score || 0)} 響叮噹\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//         {missions.map(mission => {\n//           let isChecked = false;\n//           let score = 0;\n//           if (missionScores[mission.eventoryKey]) {\n//             isChecked = missionScores[mission.eventoryKey] > mission.threshold;\n//             score =\n//               missionScores[mission.eventoryKey] > mission.threshold\n//                 ? mission.threshold\n//                 : missionScores[mission.eventoryKey];\n//           }\n\n//           return (\n//             <MissionItem\n//               checked={isChecked}\n//               title={mission.title}\n//               key={mission.title}\n//             >\n//               {mission.description}\n//               <br />\n//               {mission.awardDescription}\n//               <div className=\"mission-score\">\n//                 目前累積數量 ( {score} / {mission.threshold} )\n//               </div>\n//             </MissionItem>\n//           );\n//         })}\n//       </div>\n//     </MissionPanelWrap>\n//   );\n// };\n\n// const PortalMissionPanel = props => {\n//   const el = document.createElement('div');\n//   useEffect(() => {\n//     const root = document.getElementById('__next');\n//     root.appendChild(el);\n//   }, [el]);\n\n//   return createPortal(<MissionPanel {...props} />, el);\n// };\n\n// export default memo(PortalMissionPanel);"]},"metadata":{},"sourceType":"module"}