{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"D:\\\\17\\u5C08\\u6848\\\\\\u5BA2\\u88FD\\u5316ui\\u5C08\\u6848\\\\2011-tw-xmas chris\\\\vmo-frontend-2011-tw-xmas\\\\packages\\\\web\\\\components\\\\leaderboard\\\\MissionPanel.tsx\";\nimport React, { memo, useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { createPortal } from 'react-dom';\nimport { numberFormat, qs } from '@vmo/share/utils';\nimport { getEventoryDetails, getLeaderboardEventory } from '@vmo/share/services/leaderboardEventory.service';\nimport { THUMBNAIL_BASE_URL, DEFAULT_AVATAR } from '@vmo/share/CONST';\nimport { MissionPanelWrap, MissionItem, UserAvatar } from './style';\n\nconst MissionPanel = ({\n  condition\n}) => {\n  const {\n    missions,\n    containerID\n  } = condition;\n  const queryString = qs();\n  const [isOpen, setIsOpen] = useState(false);\n  const [missionScores, setMissionScores] = useState({});\n  const [userDetail, setUserDetail] = useState(null);\n  const source = useRef();\n  const userInfoSource = useRef();\n  useEffect(() => {\n    if (queryString.userID) {\n      localStorage.setItem('2010-xmas-userID', queryString.userID);\n    }\n\n    if (localStorage.getItem('2010-xmas-userID')) {\n      const subKeys = localStorage.getItem('2010-xmas-userID');\n      source.current = axios.CancelToken.source();\n      userInfoSource.current = axios.CancelToken.source();\n      const cancelToken = source.current.token;\n      const userInfoCancelToken = userInfoSource.current.token;\n      getLeaderboardEventory(containerID, userInfoCancelToken, 1000, '', 'GET').then(result => {\n        if (result && result.length) {\n          const user = result.find(item => item.userInfo.userID === subKeys);\n\n          if (user) {\n            setUserDetail(user);\n          }\n        }\n      });\n      getEventoryDetails(containerID, subKeys, cancelToken).then(result => {\n        const detailList = {};\n\n        if (result && result.data) {\n          result.data.forEach(item => {\n            if (item.meta && item.meta.eventoryKey) {\n              detailList[item.meta.eventoryKey] = item.score;\n            }\n          });\n        }\n\n        setMissionScores(detailList);\n      });\n    }\n\n    return () => {\n      if (source.current) source.current.cancel();\n      if (userInfoSource.current) userInfoSource.current.cancel();\n    };\n  }, [containerID, queryString.userID]);\n  let avatar = '';\n\n  if (userDetail && userDetail.userInfo) {\n    avatar = userDetail.userInfo.picture && userDetail.userInfo.picture.startsWith('http') ? userDetail.userInfo.picture : THUMBNAIL_BASE_URL + userDetail.userInfo.picture;\n  }\n\n  if (!userDetail) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(MissionPanelWrap, {\n    isOpen: isOpen,\n    withUserInfo: !!userDetail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mission-button\",\n    onClick: () => setIsOpen(!isOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), userDetail && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mission-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(UserAvatar, {\n    style: {\n      backgroundImage: `url(${avatar}), url(${DEFAULT_AVATAR})`,\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mission-user_info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mission-user_info--user_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, userDetail.userInfo.displayName || userDetail.userInfo.openID), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mission-user_info--user_score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, numberFormat(userDetail.score || 0), \" \\u97FF\\u53EE\\u5679\"))), missions.map(mission => {\n    let isChecked = false;\n    let score = 0;\n\n    if (missionScores[mission.eventoryKey]) {\n      isChecked = missionScores[mission.eventoryKey] > mission.threshold;\n      score = missionScores[mission.eventoryKey] > mission.threshold ? mission.threshold : missionScores[mission.eventoryKey];\n    }\n\n    return /*#__PURE__*/React.createElement(MissionItem, {\n      checked: isChecked,\n      title: mission.title,\n      key: mission.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, mission.description, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }), mission.awardDescription, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mission-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"\\u76EE\\u524D\\u7D2F\\u7A4D\\u6578\\u91CF ( \", score, \" / \", mission.threshold, \" )\"));\n  })));\n};\n\nconst PortalMissionPanel = props => {\n  const el = document.createElement('div');\n  useEffect(() => {\n    const root = document.getElementById('__next');\n    root.appendChild(el);\n  }, [el]);\n  return createPortal( /*#__PURE__*/React.createElement(MissionPanel, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 23\n    }\n  })), el);\n};\n\nexport default memo(PortalMissionPanel); // import React, { useContext, useEffect, useRef, memo } from 'react';\n// import axios, { CancelTokenSource } from 'axios';\n// import Loading from '@vmo/ui/Loading';\n// import { getEventoryDetails } from '@vmo/share/services/leaderboardEventory.service';\n// import { WrapPanel, WrapMission, WrapMetaScore } from './style';\n// import { MissionPanelContext } from '../../context/missionPanelContext';\n// const RenderMission = ({ mission, score, isChecked }) => {\n//   return (\n//     <WrapMission isChecked={isChecked}>\n//       <div className=\"mission-title\">{mission.title}</div>\n//       <div className=\"mission-description\">\n//         <div>{mission.description}\n//         <div className=\"mission-prize\">{mission.prize}</div>\n//         <div className=\"mission-threshold\">\n//           目前累積數量({score}/{mission.threshold})\n//         </div>\n//         </div>\n//       </div>\n//       {mission.threshold && <div className=\"mission-check\" />}\n//     </WrapMission>\n//   );\n// };\n// export default memo(({ condition, userID, meta = {} }) => {\n//   const source = useRef<CancelTokenSource>();\n//   const panelState = useContext(MissionPanelContext);\n//   const { missionDetails, setMissionDetails } = panelState;\n//   const { needRequest, missions } = condition;\n//   useEffect(() => {\n//     if (needRequest && missionDetails.length === 0) {\n//       const subKeys = userID;\n//       source.current = axios.CancelToken.source();\n//       const cancelToken = source.current.token;\n//       getEventoryDetails(condition.containerID, subKeys, cancelToken).then(\n//         result => {\n//           const detailList = [];\n//           if (result && result.data) {\n//             result.data.forEach(item => {\n//               if (item.meta && item.meta.eventoryKey)\n//                 detailList.push({\n//                   eventoryKey: item.meta.eventoryKey,\n//                   score: item.score,\n//                 });\n//             });\n//           } else {\n//             detailList.push({\n//               eventoryKey: '2008_tw_momo_l_bag',\n//               score: 0,\n//             });\n//           }\n//           setMissionDetails(detailList);\n//         },\n//       );\n//     }\n//     return () => {\n//       if (source.current) source.current.cancel();\n//     };\n//   }, [\n//     condition.containerID,\n//     missionDetails.length,\n//     needRequest,\n//     setMissionDetails,\n//     userID,\n//   ]);\n//   const RenderMetaScore = ({ mission }) => {\n//     return (\n//       <WrapMetaScore>\n//         <div className=\"mission-title\">{mission.title}</div>\n//         <div className=\"mission-description\">+ {meta[mission.metaKey]} 分</div>\n//       </WrapMetaScore>\n//     );\n//   };\n//   if (needRequest && missionDetails.length === 0) {\n//     return (\n//       <WrapPanel>\n//         <Loading color=\"#ffffff\" />\n//       </WrapPanel>\n//     );\n//   }\n//   return (\n//     <WrapPanel>\n//       {missions.map(item => {\n//         if (needRequest) {\n//           let isChecked = false;\n//           let score = 0;\n//           if (missionDetails.length > 0) {\n//             const missionMatched = missionDetails.find(detail =>\n//               detail.eventoryKey.includes(item.eventoryKey),\n//             );\n//             if (missionMatched) {\n//               isChecked = missionMatched.score >= item.threshold;\n//               score =\n//                 missionMatched.score >= item.threshold\n//                   ? item.threshold\n//                   : missionMatched.score;\n//             }\n//           }\n//           return (\n//             <RenderMission\n//               key={item.title}\n//               mission={item}\n//               score={score}\n//               isChecked={isChecked}\n//             />\n//           );\n//         }\n//         return <RenderMetaScore key={item.title} mission={item} />;\n//       })}\n//     </WrapPanel>\n//   );\n// });","map":{"version":3,"sources":["D:/17專案/客製化ui專案/2011-tw-xmas chris/vmo-frontend-2011-tw-xmas/packages/web/components/leaderboard/MissionPanel.tsx"],"names":["MissionPanel","condition","containerID","queryString","qs","useState","source","useRef","userInfoSource","useEffect","localStorage","subKeys","axios","cancelToken","userInfoCancelToken","getLeaderboardEventory","result","user","item","setUserDetail","getEventoryDetails","detailList","setMissionScores","avatar","userDetail","THUMBNAIL_BASE_URL","setIsOpen","backgroundImage","DEFAULT_AVATAR","cursor","numberFormat","mission","isChecked","score","missionScores","PortalMissionPanel","props","el","document","root","createPortal","memo"],"mappings":"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":["import React, { memo, useState, useEffect, useRef } from 'react';\nimport axios, { CancelTokenSource } from 'axios';\nimport { createPortal } from 'react-dom';\n\nimport { numberFormat, qs } from '@vmo/share/utils';\nimport {\n  getEventoryDetails,\n  getLeaderboardEventory,\n} from '@vmo/share/services/leaderboardEventory.service';\n\nimport { THUMBNAIL_BASE_URL, DEFAULT_AVATAR } from '@vmo/share/CONST';\nimport { MissionPanelWrap, MissionItem, UserAvatar } from './style';\n\nconst MissionPanel = ({ condition }) => {\n  const { missions, containerID } = condition;\n  const queryString = qs<{\n    userID: string;\n  }>();\n  const [isOpen, setIsOpen] = useState(false);\n  const [missionScores, setMissionScores] = useState({});\n  const [userDetail, setUserDetail] = useState(null);\n\n  const source = useRef<CancelTokenSource>();\n  const userInfoSource = useRef<CancelTokenSource>();\n\n  useEffect(() => {\n    if (queryString.userID) {\n      localStorage.setItem('2010-xmas-userID', queryString.userID);\n    }\n    if (localStorage.getItem('2010-xmas-userID')) {\n      const subKeys = localStorage.getItem('2010-xmas-userID');\n      source.current = axios.CancelToken.source();\n      userInfoSource.current = axios.CancelToken.source();\n      const cancelToken = source.current.token;\n      const userInfoCancelToken = userInfoSource.current.token;\n      getLeaderboardEventory(\n        containerID,\n        userInfoCancelToken,\n        1000,\n        '',\n        'GET',\n      ).then(result => {\n        if (result && result.length) {\n          const user = result.find(item => item.userInfo.userID === subKeys);\n          if (user) {\n            setUserDetail(user);\n          }\n        }\n      });\n      getEventoryDetails(containerID, subKeys, cancelToken).then(result => {\n        const detailList = {};\n        if (result && result.data) {\n          result.data.forEach(item => {\n            if (item.meta && item.meta.eventoryKey) {\n              detailList[item.meta.eventoryKey] = item.score;\n            }\n          });\n        }\n        setMissionScores(detailList);\n      });\n    }\n    return () => {\n      if (source.current) source.current.cancel();\n      if (userInfoSource.current) userInfoSource.current.cancel();\n    };\n  }, [containerID, queryString.userID]);\n\n  let avatar = '';\n  if (userDetail && userDetail.userInfo) {\n    avatar =\n      userDetail.userInfo!.picture &&\n      userDetail.userInfo!.picture!.startsWith('http')\n        ? userDetail.userInfo!.picture\n        : THUMBNAIL_BASE_URL + userDetail.userInfo!.picture;\n  }\n\n  if (!userDetail) {\n    return null;\n  }\n\n  return (\n    <MissionPanelWrap isOpen={isOpen} withUserInfo={!!userDetail}>\n      <div>\n        <div className=\"mission-button\" onClick={() => setIsOpen(!isOpen)} />\n        {userDetail && (\n          <div className=\"mission-user\">\n            <UserAvatar\n              style={{\n                backgroundImage: `url(${avatar}), url(${DEFAULT_AVATAR})`,\n                cursor: 'pointer',\n              }}\n            />\n\n            <div className=\"mission-user_info\">\n              <div className=\"mission-user_info--user_name\">\n                {userDetail.userInfo.displayName || userDetail.userInfo.openID}\n              </div>\n              <div className=\"mission-user_info--user_score\">\n                {numberFormat(userDetail.score || 0)} 響叮噹\n              </div>\n            </div>\n          </div>\n        )}\n        {missions.map(mission => {\n          let isChecked = false;\n          let score = 0;\n          if (missionScores[mission.eventoryKey]) {\n            isChecked = missionScores[mission.eventoryKey] > mission.threshold;\n            score =\n              missionScores[mission.eventoryKey] > mission.threshold\n                ? mission.threshold\n                : missionScores[mission.eventoryKey];\n          }\n\n          return (\n            <MissionItem\n              checked={isChecked}\n              title={mission.title}\n              key={mission.title}\n            >\n              {mission.description}\n              <br />\n              {mission.awardDescription}\n              <div className=\"mission-score\">\n                目前累積數量 ( {score} / {mission.threshold} )\n              </div>\n            </MissionItem>\n          );\n        })}\n      </div>\n    </MissionPanelWrap>\n  );\n};\n\nconst PortalMissionPanel = props => {\n  const el = document.createElement('div');\n  useEffect(() => {\n    const root = document.getElementById('__next');\n    root.appendChild(el);\n  }, [el]);\n\n  return createPortal(<MissionPanel {...props} />, el);\n};\n\nexport default memo(PortalMissionPanel);\n\n// import React, { useContext, useEffect, useRef, memo } from 'react';\n// import axios, { CancelTokenSource } from 'axios';\n\n// import Loading from '@vmo/ui/Loading';\n// import { getEventoryDetails } from '@vmo/share/services/leaderboardEventory.service';\n\n// import { WrapPanel, WrapMission, WrapMetaScore } from './style';\n// import { MissionPanelContext } from '../../context/missionPanelContext';\n\n// const RenderMission = ({ mission, score, isChecked }) => {\n//   return (\n//     <WrapMission isChecked={isChecked}>\n//       <div className=\"mission-title\">{mission.title}</div>\n//       <div className=\"mission-description\">\n//         <div>{mission.description}\n//         <div className=\"mission-prize\">{mission.prize}</div>\n//         <div className=\"mission-threshold\">\n//           目前累積數量({score}/{mission.threshold})\n//         </div>\n//         </div>\n//       </div>\n//       {mission.threshold && <div className=\"mission-check\" />}\n//     </WrapMission>\n//   );\n// };\n\n// export default memo(({ condition, userID, meta = {} }) => {\n//   const source = useRef<CancelTokenSource>();\n//   const panelState = useContext(MissionPanelContext);\n//   const { missionDetails, setMissionDetails } = panelState;\n\n//   const { needRequest, missions } = condition;\n\n//   useEffect(() => {\n//     if (needRequest && missionDetails.length === 0) {\n//       const subKeys = userID;\n//       source.current = axios.CancelToken.source();\n//       const cancelToken = source.current.token;\n//       getEventoryDetails(condition.containerID, subKeys, cancelToken).then(\n//         result => {\n//           const detailList = [];\n//           if (result && result.data) {\n//             result.data.forEach(item => {\n//               if (item.meta && item.meta.eventoryKey)\n//                 detailList.push({\n//                   eventoryKey: item.meta.eventoryKey,\n//                   score: item.score,\n//                 });\n//             });\n//           } else {\n//             detailList.push({\n//               eventoryKey: '2008_tw_momo_l_bag',\n//               score: 0,\n//             });\n//           }\n\n//           setMissionDetails(detailList);\n//         },\n//       );\n//     }\n//     return () => {\n//       if (source.current) source.current.cancel();\n//     };\n//   }, [\n//     condition.containerID,\n//     missionDetails.length,\n//     needRequest,\n//     setMissionDetails,\n//     userID,\n//   ]);\n\n//   const RenderMetaScore = ({ mission }) => {\n//     return (\n//       <WrapMetaScore>\n//         <div className=\"mission-title\">{mission.title}</div>\n//         <div className=\"mission-description\">+ {meta[mission.metaKey]} 分</div>\n//       </WrapMetaScore>\n//     );\n//   };\n\n//   if (needRequest && missionDetails.length === 0) {\n//     return (\n//       <WrapPanel>\n//         <Loading color=\"#ffffff\" />\n//       </WrapPanel>\n//     );\n//   }\n\n//   return (\n//     <WrapPanel>\n//       {missions.map(item => {\n//         if (needRequest) {\n//           let isChecked = false;\n//           let score = 0;\n//           if (missionDetails.length > 0) {\n//             const missionMatched = missionDetails.find(detail =>\n//               detail.eventoryKey.includes(item.eventoryKey),\n//             );\n//             if (missionMatched) {\n//               isChecked = missionMatched.score >= item.threshold;\n//               score =\n//                 missionMatched.score >= item.threshold\n//                   ? item.threshold\n//                   : missionMatched.score;\n//             }\n//           }\n//           return (\n//             <RenderMission\n//               key={item.title}\n//               mission={item}\n//               score={score}\n//               isChecked={isChecked}\n//             />\n//           );\n//         }\n//         return <RenderMetaScore key={item.title} mission={item} />;\n//       })}\n//     </WrapPanel>\n//   );\n// });\n\n"]},"metadata":{},"sourceType":"module"}