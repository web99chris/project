{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { useState, useEffect } from 'react';\nimport { createSearchAction } from '17media-browser-spy';\nimport { debounce } from '@vmo/share/utils';\nimport { trackingSource } from '@vmo/share/17appTrack';\nexport const useFilter = initialData => {\n  const [data, setData] = useState(initialData);\n  const [isFiltering, setIsFiltering] = useState(false);\n  const handleOnChange = debounce(value => {\n    if (value) {\n      let filterData = [];\n      filterData = initialData.filter(item => {\n        const name = item.userInfo.displayName || item.userInfo.openID || '';\n        return name.toLowerCase().includes(value.trim().toLowerCase());\n      });\n      setData(filterData);\n      setIsFiltering(true); // Track\n\n      trackingSource.track(createSearchAction(value, filterData.length));\n    } else {\n      setData(initialData);\n      setIsFiltering(false);\n    }\n  }, 500); // sync the new state of the initialData\n\n  useEffect(() => {\n    if (isFiltering) {\n      setData(preState => {\n        let newState = [];\n\n        if (preState && preState.length > 0 && initialData && initialData.length > 0) {\n          newState = preState.map(item => {\n            return _objectSpread({}, initialData.find(x => x.userID === item.userID));\n          });\n        }\n\n        newState.sort((l, n) => n.score - l.score);\n        return newState;\n      });\n    } else {\n      setData(initialData);\n    }\n  }, [initialData, isFiltering]);\n  return {\n    data,\n    handleOnChange\n  };\n};","map":{"version":3,"sources":["D:\\17專案\\客製化ui專案\\test2\\vmo-frontend-2008-tw-momo\\packages\\ui\\hooks\\useFilter.ts"],"names":["useState","useEffect","createSearchAction","debounce","trackingSource","useFilter","initialData","data","setData","isFiltering","setIsFiltering","handleOnChange","value","filterData","filter","item","name","userInfo","displayName","openID","toLowerCase","includes","trim","track","length","preState","newState","map","find","x","userID","sort","l","n","score"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AAGA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,OAAO,MAAMC,SAAS,GAAIC,WAAD,IAA6C;AACpE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAA6BM,WAA7B,CAAhC;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMW,cAAc,GAAGR,QAAQ,CAACS,KAAK,IAAI;AACvC,QAAIA,KAAJ,EAAW;AACT,UAAIC,UAAU,GAAG,EAAjB;AACAA,MAAAA,UAAU,GAAGP,WAAW,CAACQ,MAAZ,CAAmBC,IAAI,IAAI;AACtC,cAAMC,IAAI,GACRD,IAAI,CAAEE,QAAN,CAAgBC,WAAhB,IAA+BH,IAAI,CAAEE,QAAN,CAAgBE,MAA/C,IAAyD,EAD3D;AAEA,eAAOH,IAAI,CAAEI,WAAN,GAAoBC,QAApB,CAA6BT,KAAK,CAACU,IAAN,GAAaF,WAAb,EAA7B,CAAP;AACD,OAJY,CAAb;AAKAZ,MAAAA,OAAO,CAACK,UAAD,CAAP;AACAH,MAAAA,cAAc,CAAC,IAAD,CAAd,CARS,CAST;;AACAN,MAAAA,cAAc,CAACmB,KAAf,CAAqBrB,kBAAkB,CAACU,KAAD,EAAQC,UAAU,CAACW,MAAnB,CAAvC;AACD,KAXD,MAWO;AACLhB,MAAAA,OAAO,CAACF,WAAD,CAAP;AACAI,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GAhB8B,EAgB5B,GAhB4B,CAA/B,CAJoE,CAqBpE;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,WAAJ,EAAiB;AACfD,MAAAA,OAAO,CAACiB,QAAQ,IAAI;AAClB,YAAIC,QAAQ,GAAG,EAAf;;AACA,YACED,QAAQ,IACRA,QAAQ,CAACD,MAAT,GAAkB,CADlB,IAEClB,WAAW,IAAIA,WAAW,CAACkB,MAAZ,GAAqB,CAHvC,EAIE;AACAE,UAAAA,QAAQ,GAAGD,QAAQ,CAACE,GAAT,CAAaZ,IAAI,IAAI;AAC9B,qCAAYT,WAAW,CAACsB,IAAZ,CAAiBC,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaf,IAAI,CAACe,MAAxC,CAAZ;AACD,WAFU,CAAX;AAGD;;AACDJ,QAAAA,QAAQ,CAACK,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAApC;AACA,eAAOR,QAAP;AACD,OAbM,CAAP;AAcD,KAfD,MAeO;AACLlB,MAAAA,OAAO,CAACF,WAAD,CAAP;AACD;AACF,GAnBQ,EAmBN,CAACA,WAAD,EAAcG,WAAd,CAnBM,CAAT;AAqBA,SAAO;AAAEF,IAAAA,IAAF;AAAQI,IAAAA;AAAR,GAAP;AACD,CA5CM","sourcesContent":["import { useState, useEffect } from 'react';\nimport { createSearchAction } from '17media-browser-spy';\n\nimport { LeaderboardItem as LeaderboardItemInterface } from '@vmo/share/interfaces/LeaderboardItem';\nimport { debounce } from '@vmo/share/utils';\nimport { trackingSource } from '@vmo/share/17appTrack';\n\nexport const useFilter = (initialData: LeaderboardItemInterface[]) => {\n  const [data, setData] = useState<LeaderboardItemInterface[]>(initialData);\n  const [isFiltering, setIsFiltering] = useState(false);\n\n  const handleOnChange = debounce(value => {\n    if (value) {\n      let filterData = [];\n      filterData = initialData.filter(item => {\n        const name =\n          item!.userInfo!.displayName || item!.userInfo!.openID || '';\n        return name!.toLowerCase().includes(value.trim().toLowerCase());\n      });\n      setData(filterData);\n      setIsFiltering(true);\n      // Track\n      trackingSource.track(createSearchAction(value, filterData.length));\n    } else {\n      setData(initialData);\n      setIsFiltering(false);\n    }\n  }, 500);\n  // sync the new state of the initialData\n  useEffect(() => {\n    if (isFiltering) {\n      setData(preState => {\n        let newState = [];\n        if (\n          preState &&\n          preState.length > 0 &&\n          (initialData && initialData.length > 0)\n        ) {\n          newState = preState.map(item => {\n            return { ...initialData.find(x => x.userID === item.userID) };\n          });\n        }\n        newState.sort((l, n) => n.score - l.score);\n        return newState;\n      });\n    } else {\n      setData(initialData);\n    }\n  }, [initialData, isFiltering]);\n\n  return { data, handleOnChange };\n};\n"]},"metadata":{},"sourceType":"module"}