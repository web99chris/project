{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\17\\u5C08\\u6848\\\\\\u5BA2\\u88FD\\u5316ui\\u5C08\\u6848\\\\test2\\\\vmo-frontend-2008-tw-momo\\\\packages\\\\ui\\\\EventCountdown.tsx\";\nimport React, { Component } from 'react';\nimport { calculateCountdown, formatDateEvent, addLeadingZeros } from '@vmo/share/utils';\nimport styled, { ThemeProvider } from 'styled-components';\nconst WrapCountdown = styled.div.withConfig({\n  displayName: \"EventCountdown__WrapCountdown\",\n  componentId: \"sc-99do3f-0\"\n})([\"font-size:16px;font-weight:500;line-height:1.38;text-align:center;color:\", \";padding:26px 0 21.3px;div{&:last-child{color:\", \";}}\"], props => props.theme.colorFirst, props => props.theme.colorLast);\nexport class EventCountdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: 0,\n      hours: 0,\n      min: 0,\n      sec: 0,\n      notYetStarted: false,\n      ended: false\n    };\n    this.interval = 0;\n  }\n\n  componentDidMount() {\n    this.createCountdown();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      startDate\n    } = this.props;\n\n    if (prevProps.startDate !== startDate) {\n      this.stop();\n      this.createCountdown();\n    }\n  }\n\n  componentWillUnmount() {\n    this.stop();\n  }\n\n  stop() {\n    clearInterval(this.interval);\n  }\n\n  createCountdown() {\n    const {\n      startDate,\n      endDate\n    } = this.props;\n\n    const exePerSec = () => {\n      const date = calculateCountdown(startDate, endDate);\n      this.setState(_objectSpread({}, date));\n\n      if (date.notYetStarted || date.ended) {\n        this.stop();\n      }\n    }; // update every second\n\n\n    exePerSec();\n    this.interval = setInterval(exePerSec, 1000);\n  }\n\n  render() {\n    const {\n      theme,\n      startDate,\n      startDay,\n      endDate,\n      endDay,\n      day,\n      countdownMSG,\n      notYetStartedMSG,\n      endedMSG\n    } = this.props;\n    const {\n      days,\n      hours,\n      min,\n      sec,\n      notYetStarted,\n      ended\n    } = this.state;\n    let msg;\n\n    if (notYetStarted) {\n      msg = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, notYetStartedMSG);\n    } else if (ended) {\n      msg = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, endedMSG);\n    } else {\n      msg = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, `${countdownMSG} ${addLeadingZeros(days)} ${day} ${addLeadingZeros(hours)}:${addLeadingZeros(min)}:${addLeadingZeros(sec)}`);\n    }\n\n    return React.createElement(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(WrapCountdown, _extends({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, `${formatDateEvent(startDate, startDay)}－${formatDateEvent(endDate, endDay)}`), msg));\n  }\n\n}\n\n_defineProperty(EventCountdown, \"defaultProps\", {\n  countdownMSG: '活動尚餘',\n  day: '天',\n  notYetStartedMSG: '尚未開始',\n  endedMSG: '已結束'\n});\n\nexport default EventCountdown;","map":{"version":3,"sources":["D:\\17專案\\客製化ui專案\\test2\\vmo-frontend-2008-tw-momo\\packages\\ui\\EventCountdown.tsx"],"names":["React","Component","calculateCountdown","formatDateEvent","addLeadingZeros","styled","ThemeProvider","WrapCountdown","div","props","theme","colorFirst","colorLast","EventCountdown","constructor","state","days","hours","min","sec","notYetStarted","ended","interval","componentDidMount","createCountdown","componentDidUpdate","prevProps","startDate","stop","componentWillUnmount","clearInterval","endDate","exePerSec","date","setState","setInterval","render","startDay","endDay","day","countdownMSG","notYetStartedMSG","endedMSG","msg"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  calculateCountdown,\n  formatDateEvent,\n  addLeadingZeros,\n} from '@vmo/share/utils';\nimport styled, { ThemeProvider } from 'styled-components';\n\nconst WrapCountdown = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.38;\n  text-align: center;\n  color: ${props => props.theme.colorFirst};\n  padding: 26px 0 21.3px;\n  div {\n    &:last-child {\n      color: ${props => props.theme.colorLast};\n    }\n  }\n`;\n\ninterface Props {\n  endDate: string;\n  endDay: string;\n  startDate: string;\n  startDay: string;\n  className?: string;\n  theme: { colorFirst: string; colorLast: string };\n  countdownMSG?: string;\n  day?: string;\n  endedMSG?: string;\n  notYetStartedMSG?: string;\n}\n\ninterface State {\n  days: number;\n  hours: number;\n  min: number;\n  sec: number;\n  notYetStarted: boolean;\n  ended: boolean;\n}\n\nexport class EventCountdown extends Component<Props, State> {\n  static defaultProps = {\n    countdownMSG: '活動尚餘',\n    day: '天',\n    notYetStartedMSG: '尚未開始',\n    endedMSG: '已結束',\n  };\n\n  interval: number;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      days: 0,\n      hours: 0,\n      min: 0,\n      sec: 0,\n      notYetStarted: false,\n      ended: false,\n    };\n    this.interval = 0;\n  }\n\n  componentDidMount() {\n    this.createCountdown();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { startDate } = this.props;\n    if (prevProps.startDate !== startDate) {\n      this.stop();\n      this.createCountdown();\n    }\n  }\n\n  componentWillUnmount() {\n    this.stop();\n  }\n\n  stop() {\n    clearInterval(this.interval);\n  }\n\n  createCountdown() {\n    const { startDate, endDate } = this.props;\n    const exePerSec = () => {\n      const date = calculateCountdown(startDate, endDate);\n      this.setState({ ...date });\n      if (date.notYetStarted || date.ended) {\n        this.stop();\n      }\n    };\n\n    // update every second\n    exePerSec();\n    this.interval = setInterval(exePerSec, 1000);\n  }\n\n  render() {\n    const {\n      theme,\n      startDate,\n      startDay,\n      endDate,\n      endDay,\n      day,\n      countdownMSG,\n      notYetStartedMSG,\n      endedMSG,\n    } = this.props;\n    const { days, hours, min, sec, notYetStarted, ended } = this.state;\n    let msg: React.ReactElement;\n    if (notYetStarted) {\n      msg = <div>{notYetStartedMSG}</div>;\n    } else if (ended) {\n      msg = <div>{endedMSG}</div>;\n    } else {\n      msg = (\n        <div>{`${countdownMSG} ${addLeadingZeros(\n          days,\n        )} ${day} ${addLeadingZeros(hours)}:${addLeadingZeros(\n          min,\n        )}:${addLeadingZeros(sec)}`}</div>\n      );\n    }\n    return (\n      <ThemeProvider theme={theme}>\n        <WrapCountdown {...this.props}>\n          <div>{`${formatDateEvent(startDate, startDay)}－${formatDateEvent(\n            endDate,\n            endDay,\n          )}`}</div>\n          {msg}\n        </WrapCountdown>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default EventCountdown;\n"]},"metadata":{},"sourceType":"module"}